package randoop;

import junit.framework.*;

public class RandoopTest2 extends TestCase {

  public static boolean debug = false;

  public void test1() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test1");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.TestResult var4 = var1.run();
    var1.test();
    var1.test();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var8, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var13 = var8.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var8);
    int var15 = var8.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1, (java.lang.Object)var15);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);

  }

  public void test2() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test2");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test3() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test3");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    var0.test();
    junit.framework.TestResult var3 = var0.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test4() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test4");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.TestResult var4 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    junit.framework.TestResult var7 = var5.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("hi! expected:<100> but was:<10>", (java.lang.Object)var1, (java.lang.Object)var7);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test5() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test5");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.TestResult var5 = var2.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var2);
    java.lang.String var7 = var2.getName();
    junit.framework.TestResult var8 = var2.run();
    java.lang.Object var11 = new java.lang.Object();
    junit.framework.Assert.assertNotSame("hi! expected:<100> but was:<10>", (java.lang.Object)1.0d, var11);
    junit.framework.Assert.assertNotNull(var11);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, var11);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test6() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test6");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100.0f, 1.0f, 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test7() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test7");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test8() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test8");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(" expected:<10> but was:<10>", 100.0f, 10.0f, (-1.0f));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test9() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test9");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (byte)(-1), (byte)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test10() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test10");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100.0f, 0.0f, 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test11() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test11");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", 100.0d, 10.0d, 1.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test12() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test12");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", 0, 1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test13() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test13");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertFalse("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test14() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test14");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", 1L, 10L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test15() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test15");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", 10L, 0L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test16() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test16");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var0.run(var3);
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    var7.test();
    junit.framework.TestResult var10 = var7.run();
    var5.run(var10);
    var0.run(var10);
    java.lang.String var13 = var0.toString();
    junit.framework.Assert.assertNotNull((java.lang.Object)var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test17() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test17");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", 10.0f, 1.0f, 100.0f);

  }

  public void test18() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test18");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (byte)100, (byte)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test19() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test19");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    int var2 = var1.countTestCases();
    java.lang.String var3 = var1.getName();
    junit.framework.TestResult var4 = var1.run();
    int var5 = var1.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var7 = var6.toString();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var6.run(var9);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var1, (java.lang.Object)var9);
    int var12 = var1.countTestCases();
    java.lang.Object var13 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var13, (java.lang.Object)var14);
    java.lang.String var16 = var14.toString();
    junit.framework.TestResult var17 = var14.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var1, (java.lang.Object)var17);
    var1.test();
    junit.framework.TestResult var20 = var1.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var1.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);

  }

  public void test20() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test20");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (short)(-1), (short)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test21() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test21");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>", false, true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test22() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test22");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", 100.0f, 0.0f, 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test23() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test23");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)(-1), (byte)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test24() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test24");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(" expected:<10> but was:<10>", "null(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test25() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test25");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test26() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test26");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    java.lang.String var3 = var1.toString();
    java.lang.String var4 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    var5.test();
    junit.framework.TestResult var8 = var5.run();
    int var9 = var5.countTestCases();
    int var10 = var5.countTestCases();
    junit.framework.TestResult var11 = var5.run();
    var5.test();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1, (java.lang.Object)var5);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var3.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test27() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test27");


    junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 1.0f, 1.0f, 100.0f);

  }

  public void test28() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test28");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", true, true);

  }

  public void test29() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test29");


    junit.framework.Assert.assertEquals("", 0.0d, (-1.0d), 100.0d);

  }

  public void test30() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test30");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", 10.0d, 1.0d, (-1.0d));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test31() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test31");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", 1, 0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test32() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test32");


    junit.framework.Assert.assertEquals(1.0d, 1.0d, 0.0d);

  }

  public void test33() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test33");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var1.run(var4);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.TestResult var11 = var8.run();
    var6.run(var11);
    var1.run(var11);
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var1.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test34() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test34");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(0.0d, 1.0d, 0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test35() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test35");


    java.lang.Object var3 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var6 = var5.toString();
    var5.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var9 = var5.countTestCases();
    java.lang.String var11 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var5, (java.lang.Object)true);
    java.lang.String var12 = var5.toString();
    java.lang.String var13 = var5.toString();
    junit.framework.TestResult var14 = var5.run();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", var3, (java.lang.Object)var14);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", (java.lang.Object)(byte)100, (java.lang.Object)var14);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test36() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test36");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", 10.0f, 0.0f, 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test37() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test37");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    int var4 = var3.countTestCases();
    java.lang.String var5 = var3.getName();
    junit.framework.TestResult var6 = var3.run();
    int var7 = var3.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var9 = var8.toString();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var8.run(var11);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var3, (java.lang.Object)var11);
    int var14 = var3.countTestCases();
    java.lang.Object var15 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var15, (java.lang.Object)var16);
    java.lang.String var18 = var16.toString();
    junit.framework.TestResult var19 = var16.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var3, (java.lang.Object)var19);
    var3.test();
    java.lang.String var23 = junit.framework.Assert.format("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var3, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)");
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var25 = var24.toString();
    var24.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var28 = var24.getName();
    java.lang.String var29 = var24.toString();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var23.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var28.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var29.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test38() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test38");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test39() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test39");


    java.lang.Object var2 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var2, (java.lang.Object)var3);
    junit.framework.TestResult var5 = var3.run();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", (java.lang.Object)true, (java.lang.Object)var3);
    java.lang.Object var9 = new java.lang.Object();
    junit.framework.Assert.assertNotSame("hi! expected:<100> but was:<10>", (java.lang.Object)1.0d, var9);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)true, var9);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test40() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test40");


    junit.framework.Assert.assertEquals("", (-1.0f), 0.0f, 10.0f);

  }

  public void test41() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test41");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>", (byte)(-1), (byte)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test42() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test42");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", (byte)1, (byte)1);

  }

  public void test43() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test43");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((short)1, (short)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test44() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test44");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var3.test();
    junit.framework.TestResult var6 = var3.run();
    int var7 = var3.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)0L, (java.lang.Object)var3);
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var9.test();
    java.lang.String var12 = var9.toString();
    java.lang.String var13 = var9.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var3, (java.lang.Object)var9);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test45() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test45");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 'a', '4');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test46() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test46");


    junit.framework.Assert.assertNotSame((java.lang.Object)'4', (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");

  }

  public void test47() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test47");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)", "hi!");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test48() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test48");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var7 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var10 = var9.toString();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var9.run(var12);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var12);
    junit.framework.Assert.assertNotSame((java.lang.Object)var7, (java.lang.Object)var12);
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    int var17 = var16.countTestCases();
    java.lang.String var18 = var16.getName();
    junit.framework.TestResult var19 = var16.run();
    int var20 = var16.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var23 = var22.toString();
    var22.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var26 = var22.countTestCases();
    java.lang.String var28 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var22, (java.lang.Object)true);
    java.lang.String var29 = var22.toString();
    java.lang.String var30 = var22.toString();
    junit.framework.TestResult var31 = var22.run();
    var16.run(var31);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var12, (java.lang.Object)var16);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var23.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var28.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var29.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var30.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);

  }

  public void test49() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test49");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    junit.framework.TestResult var6 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    var7.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var11 = var7.countTestCases();
    int var12 = var7.countTestCases();
    java.lang.String var13 = var7.getName();
    java.lang.String var14 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var6, (java.lang.Object)var7);
    junit.framework.TestResult var15 = var7.run();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var17 = var16.toString();
    var16.setName(" expected:<10> but was:<10>");
    junit.framework.TestResult var20 = var16.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var7, (java.lang.Object)var16);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);

  }

  public void test50() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test50");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    int var2 = var1.countTestCases();
    java.lang.String var3 = var1.getName();
    junit.framework.TestResult var4 = var1.run();
    int var5 = var1.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var7 = var6.toString();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var6.run(var9);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var1, (java.lang.Object)var9);
    int var12 = var1.countTestCases();
    java.lang.Object var13 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var13, (java.lang.Object)var14);
    java.lang.String var16 = var14.toString();
    junit.framework.TestResult var17 = var14.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var1, (java.lang.Object)var17);
    var1.test();
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var21 = var20.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var1, (java.lang.Object)var20);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var21.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test51() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test51");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    junit.framework.TestResult var2 = var0.run();
    junit.framework.TestResult var3 = var0.run();
    java.lang.String var4 = var0.toString();
    junit.framework.Assert.assertNotNull((java.lang.Object)var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test52() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test52");


    junit.framework.Assert.assertEquals(100.0f, 1.0f, 100.0f);

  }

  public void test53() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test53");


    junit.framework.Assert.assertEquals(10L, 10L);

  }

  public void test54() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test54");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    int var3 = var2.countTestCases();
    java.lang.String var4 = var2.getName();
    int var5 = var2.countTestCases();
    int var6 = var2.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)0.0f, (java.lang.Object)var6);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);

  }

  public void test55() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test55");


    java.lang.Object var1 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var1, (java.lang.Object)var2);
    junit.framework.TestResult var4 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    var5.test();
    junit.framework.TestResult var8 = var5.run();
    int var9 = var5.countTestCases();
    junit.framework.TestResult var10 = var5.run();
    var2.run(var10);
    java.lang.Object var14 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var14, (java.lang.Object)var15);
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var19 = var18.toString();
    var18.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var22 = var18.countTestCases();
    java.lang.String var24 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var18, (java.lang.Object)true);
    java.lang.String var25 = var18.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var15, (java.lang.Object)var25);
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var28 = var27.toString();
    var27.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var31 = var27.countTestCases();
    int var32 = var27.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var25, (java.lang.Object)var27);
    junit.framework.TestResult var34 = var27.run();
    com.application.ciadobusao.test.EncontroTeste var37 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var38 = var37.toString();
    junit.framework.TestResult var39 = var37.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var39);
    com.application.ciadobusao.test.EncontroTeste var42 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var43 = var42.run();
    var42.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var42, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var47 = var42.getName();
    var42.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var50 = var42.run();
    junit.framework.TestResult var51 = var42.run();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var42);
    junit.framework.Assert.assertNotSame((java.lang.Object)var27, (java.lang.Object)var42);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var2, (java.lang.Object)var27);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var28.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var38.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);

  }

  public void test56() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test56");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", ' ', '#');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test57() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test57");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    java.lang.String var2 = var0.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test58() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test58");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test59() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test59");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (byte)100, (byte)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test60() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test60");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var5 = var4.run();
    var4.test();
    junit.framework.TestResult var7 = var4.run();
    var2.run(var7);
    junit.framework.TestResult var9 = var2.run();
    java.lang.String var10 = var2.getName();
    var2.setName("hi!");
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var15 = var14.toString();
    var14.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var18 = var14.countTestCases();
    java.lang.String var20 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var14, (java.lang.Object)true);
    java.lang.String var21 = var14.toString();
    java.lang.String var22 = var14.toString();
    java.lang.String var23 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var2, (java.lang.Object)var14);
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var26 = var25.run();
    var25.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var25, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var30 = var25.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var25);
    int var32 = var25.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var25);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var15.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var20.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var21.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var23.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);

  }

  public void test61() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test61");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (short)10, (short)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test62() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test62");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", 100.0d, 1.0d, (-1.0d));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test63() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test63");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)(-1), (byte)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test64() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test64");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", false, true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test65() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test65");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("hi!(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test66() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test66");


    java.lang.Object var3 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var6 = var5.toString();
    var5.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var9 = var5.countTestCases();
    java.lang.String var11 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var5, (java.lang.Object)true);
    java.lang.String var12 = var5.toString();
    java.lang.String var13 = var5.toString();
    junit.framework.TestResult var14 = var5.run();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", var3, (java.lang.Object)var14);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)(short)0, var3);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test67() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test67");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (byte)10, (byte)10);

  }

  public void test68() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test68");


    junit.framework.Assert.assertEquals(0.0f, 1.0f, 100.0f);

  }

  public void test69() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test69");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var5 = var4.run();
    var4.test();
    junit.framework.TestResult var7 = var4.run();
    var2.run(var7);
    junit.framework.TestResult var9 = var2.run();
    java.lang.String var10 = var2.getName();
    var2.setName("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test70() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test70");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var7 = var2.getName();
    junit.framework.TestResult var8 = var2.run();
    var2.test();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var10.test();
    junit.framework.TestResult var13 = var10.run();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    junit.framework.TestResult var18 = var16.run();
    junit.framework.TestResult var19 = var16.run();
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var22 = var21.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var21);
    java.lang.String var24 = var21.toString();
    java.lang.String var25 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var19, (java.lang.Object)var21);
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var27 = var26.run();
    junit.framework.TestResult var28 = var26.run();
    java.lang.String var29 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var19, (java.lang.Object)var28);
    var10.run(var28);
    var10.test();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2, (java.lang.Object)var10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);

  }

  public void test71() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test71");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", 100L, 1L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test72() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test72");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.TestResult var5 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var7);
    java.lang.String var10 = var7.toString();
    java.lang.String var11 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var5, (java.lang.Object)var7);
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    junit.framework.TestResult var14 = var12.run();
    java.lang.String var15 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var5, (java.lang.Object)var14);
    java.lang.Object var16 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var16, (java.lang.Object)var17);
    junit.framework.TestResult var19 = var17.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var14, (java.lang.Object)var17);
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    int var22 = var21.countTestCases();
    java.lang.String var23 = var21.getName();
    junit.framework.TestResult var24 = var21.run();
    int var25 = var21.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var28 = var27.toString();
    var27.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var31 = var27.countTestCases();
    java.lang.String var33 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var27, (java.lang.Object)true);
    java.lang.String var34 = var27.toString();
    java.lang.String var35 = var27.toString();
    junit.framework.TestResult var36 = var27.run();
    var21.run(var36);
    var17.run(var36);
    com.application.ciadobusao.test.EncontroTeste var39 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var40 = var39.run();
    var39.test();
    java.lang.String var42 = var39.toString();
    java.lang.String var43 = var39.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var17, (java.lang.Object)var39);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var28.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var33.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var34.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var35.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var42.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);

  }

  public void test73() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test73");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)", (short)0, (short)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test74() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test74");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", "null(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test75() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test75");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", "hi!");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test76() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test76");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", 0.0f, 1.0f, 10.0f);

  }

  public void test77() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test77");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var3);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    var6.test();
    java.lang.String var9 = var6.getName();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var6.run(var11);
    var3.run(var11);
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var15 = var14.run();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    var16.test();
    junit.framework.TestResult var19 = var16.run();
    var14.run(var19);
    var3.run(var19);
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var3);
    com.application.ciadobusao.test.EncontroTeste var23 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var24 = var23.run();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var26 = var25.run();
    var25.test();
    junit.framework.TestResult var28 = var25.run();
    var23.run(var28);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", (java.lang.Object)var3, (java.lang.Object)var28);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);

  }

  public void test78() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test78");


    junit.framework.Assert.assertEquals((-1.0f), (-1.0f), 0.0f);

  }

  public void test79() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test79");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var0.run(var3);
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    var7.test();
    junit.framework.TestResult var10 = var7.run();
    var5.run(var10);
    var0.run(var10);
    java.lang.String var13 = var0.toString();
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.Object var20 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var20, (java.lang.Object)var21);
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var25 = var24.toString();
    var24.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var28 = var24.countTestCases();
    java.lang.String var30 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var24, (java.lang.Object)true);
    java.lang.String var31 = var24.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var21, (java.lang.Object)var31);
    com.application.ciadobusao.test.EncontroTeste var33 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var34 = var33.toString();
    var33.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var37 = var33.countTestCases();
    int var38 = var33.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var31, (java.lang.Object)var33);
    junit.framework.TestResult var40 = var33.run();
    java.lang.String var41 = var33.getName();
    java.lang.String var42 = junit.framework.Assert.format("hi!", (java.lang.Object)"hi!", (java.lang.Object)var33);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var42);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var30.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var31.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var34.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var41.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var42.equals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));

  }

  public void test80() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test80");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test81() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test81");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    java.lang.String var5 = var2.getName();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    var2.run(var7);
    java.lang.String var9 = var2.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var9);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test82() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test82");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (byte)(-1), (byte)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test83() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test83");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", "hi!");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test84() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test84");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", (byte)1, (byte)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test85() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test85");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1);
    java.lang.String var4 = var1.toString();
    var1.test();
    java.lang.Object var7 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var10 = var9.toString();
    var9.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var13 = var9.countTestCases();
    java.lang.String var15 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var9, (java.lang.Object)true);
    java.lang.String var16 = var9.toString();
    java.lang.String var17 = var9.toString();
    junit.framework.TestResult var18 = var9.run();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", var7, (java.lang.Object)var18);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var1, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var15.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test86() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test86");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", (short)(-1), (short)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test87() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test87");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    int var3 = var2.countTestCases();
    java.lang.String var4 = var2.getName();
    junit.framework.TestResult var5 = var2.run();
    int var6 = var2.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var7.run(var10);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var10);
    int var13 = var2.countTestCases();
    java.lang.Object var14 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var14, (java.lang.Object)var15);
    java.lang.String var17 = var15.toString();
    junit.framework.TestResult var18 = var15.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var2, (java.lang.Object)var18);
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    var20.test();
    junit.framework.TestResult var23 = var20.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var20);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var2, (java.lang.Object)var20);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);

  }

  public void test88() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test88");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>", (-1L), 10L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test89() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test89");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    int var3 = var2.countTestCases();
    java.lang.String var4 = var2.getName();
    int var5 = var2.countTestCases();
    java.lang.String var6 = var2.getName();
    junit.framework.Assert.assertNotSame((java.lang.Object)var2, (java.lang.Object)true);
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    var12.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var12, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var17 = var12.run();
    java.lang.String var18 = junit.framework.Assert.format("hi! expected:<100> but was:<10>", (java.lang.Object)100, (java.lang.Object)var17);
    java.lang.String var19 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var2, (java.lang.Object)var18);
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    java.lang.String var22 = var20.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var18, (java.lang.Object)var22);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test90() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test90");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(0.0d, 1.0d, (-1.0d));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test91() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test91");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100.0f, 1.0f, (-1.0f));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test92() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test92");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.TestResult var4 = var1.run();
    var1.test();
    var1.setName(" expected:<10> but was:<10>");
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", (java.lang.Object)" expected:<10> but was:<10>");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test93() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test93");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("", 0, 1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test94() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test94");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", true, false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test95() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test95");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    java.lang.String var3 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var5 = var4.toString();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    var4.run(var7);
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var11.test();
    junit.framework.TestResult var14 = var11.run();
    var9.run(var14);
    var4.run(var14);
    var1.run(var14);
    java.lang.Object var21 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var21, (java.lang.Object)var22);
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var26 = var25.toString();
    var25.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var29 = var25.countTestCases();
    java.lang.String var31 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var25, (java.lang.Object)true);
    java.lang.String var32 = var25.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var22, (java.lang.Object)var32);
    com.application.ciadobusao.test.EncontroTeste var34 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var35 = var34.toString();
    var34.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var38 = var34.countTestCases();
    int var39 = var34.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var32, (java.lang.Object)var34);
    com.application.ciadobusao.test.EncontroTeste var43 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var44 = var43.run();
    junit.framework.TestResult var45 = var43.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var43);
    com.application.ciadobusao.test.EncontroTeste var48 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var49 = var48.toString();
    com.application.ciadobusao.test.EncontroTeste var50 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var51 = var50.run();
    var48.run(var51);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var51);
    var43.run(var51);
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var51);
    java.lang.String var56 = junit.framework.Assert.format(" expected:<10> but was:<10>", (java.lang.Object)var34, (java.lang.Object)var51);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame(" expected:<10> but was:<10>", (java.lang.Object)var14, (java.lang.Object)var51);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var3.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var31.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var32.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var35.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var49.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);

  }

  public void test96() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test96");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var1);
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    var1.setName("hi! expected:<100> but was:<10>");
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var10 = var9.toString();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var9.run(var12);
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var16 = var15.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var15);
    java.lang.String var18 = var15.toString();
    int var19 = var15.countTestCases();
    int var20 = var15.countTestCases();
    java.lang.String var21 = var15.getName();
    junit.framework.Assert.assertNotSame((java.lang.Object)var12, (java.lang.Object)var15);
    var1.run(var12);
    java.lang.Object var26 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var26, (java.lang.Object)var27);
    java.lang.String var29 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var27);
    java.lang.String var30 = var27.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var12, (java.lang.Object)var30);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var29.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var30.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test97() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test97");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    int var6 = var2.countTestCases();
    junit.framework.Assert.assertNotSame("hi!", (java.lang.Object)var2, (java.lang.Object)0);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("hi!", (java.lang.Object)var2, (java.lang.Object)"");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);

  }

  public void test98() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test98");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test99() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test99");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", 1.0f, 1.0f, 10.0f);

  }

  public void test100() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test100");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var7 = var2.getName();
    junit.framework.TestResult var8 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    junit.framework.TestResult var13 = var11.run();
    junit.framework.TestResult var14 = var11.run();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var16);
    java.lang.String var19 = var16.toString();
    java.lang.String var20 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var14, (java.lang.Object)var16);
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var22 = var21.run();
    junit.framework.TestResult var23 = var21.run();
    java.lang.String var24 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var14, (java.lang.Object)var23);
    java.lang.Object var25 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var25, (java.lang.Object)var26);
    junit.framework.TestResult var28 = var26.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var23, (java.lang.Object)var26);
    var2.run(var23);
    com.application.ciadobusao.test.EncontroTeste var31 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var32 = var31.toString();
    com.application.ciadobusao.test.EncontroTeste var33 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var34 = var33.run();
    var31.run(var34);
    com.application.ciadobusao.test.EncontroTeste var37 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var38 = var37.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var37);
    java.lang.String var40 = var37.toString();
    int var41 = var37.countTestCases();
    int var42 = var37.countTestCases();
    java.lang.String var43 = var37.getName();
    junit.framework.Assert.assertNotSame((java.lang.Object)var34, (java.lang.Object)var37);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var23, (java.lang.Object)var37);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var32.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var40.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);

  }

  public void test101() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test101");


    junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (byte)0, (byte)0);

  }

  public void test102() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test102");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertFalse("hi! expected:<100> but was:<10>", true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test103() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test103");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste)", (byte)(-1), (byte)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test104() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test104");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    int var2 = var1.countTestCases();
    java.lang.String var3 = var1.getName();
    junit.framework.TestResult var4 = var1.run();
    int var5 = var1.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var7 = var6.toString();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var6.run(var9);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var1, (java.lang.Object)var9);
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var15 = var14.run();
    var14.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var14, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var19 = var14.getName();
    var14.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var22 = var14.toString();
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var25 = var24.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var24);
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var28 = var27.run();
    var27.test();
    java.lang.String var30 = var27.getName();
    com.application.ciadobusao.test.EncontroTeste var31 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var32 = var31.run();
    var27.run(var32);
    var24.run(var32);
    com.application.ciadobusao.test.EncontroTeste var35 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var36 = var35.run();
    com.application.ciadobusao.test.EncontroTeste var37 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var38 = var37.run();
    var37.test();
    junit.framework.TestResult var40 = var37.run();
    var35.run(var40);
    var24.run(var40);
    java.lang.Object var43 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var44 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var43, (java.lang.Object)var44);
    junit.framework.TestResult var46 = var44.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var40, (java.lang.Object)var46);
    java.lang.String var48 = junit.framework.Assert.format("hi! expected:<100> but was:<10>", (java.lang.Object)var14, (java.lang.Object)var40);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)"hi! expected:<100> but was:<10>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);

  }

  public void test105() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test105");


    junit.framework.Assert.assertTrue("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", true);

  }

  public void test106() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test106");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    int var4 = var3.countTestCases();
    java.lang.String var5 = var3.getName();
    junit.framework.TestResult var6 = var3.run();
    int var7 = var3.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var9 = var8.toString();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var8.run(var11);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var3, (java.lang.Object)var11);
    int var14 = var3.countTestCases();
    int var15 = var3.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)100L, (java.lang.Object)var3);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);

  }

  public void test107() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test107");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");

  }

  public void test108() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test108");


    junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (byte)10, (byte)10);

  }

  public void test109() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test109");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (-1.0d), 10.0d, 100.0d);

  }

  public void test110() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test110");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test111() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test111");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test112() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test112");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var7 = var2.getName();
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var10 = var2.run();
    junit.framework.TestResult var11 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var16 = var15.run();
    var15.test();
    junit.framework.TestResult var18 = var15.run();
    var13.run(var18);
    junit.framework.TestResult var20 = var13.run();
    java.lang.String var21 = var13.getName();
    java.lang.String var22 = var13.getName();
    junit.framework.TestResult var23 = var13.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var23);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi! expected:<100> but was:<10>", (java.lang.Object)var11, (java.lang.Object)var23);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);

  }

  public void test113() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test113");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste)", "null(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test114() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test114");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1);
    java.lang.String var4 = var1.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var1.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test115() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test115");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    int var1 = var0.countTestCases();
    java.lang.String var2 = var0.getName();
    int var3 = var0.countTestCases();
    java.lang.String var4 = var0.getName();
    java.lang.String var5 = var0.toString();
    int var6 = var0.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var9.test();
    junit.framework.TestResult var12 = var9.run();
    var7.run(var12);
    java.lang.String var14 = var7.getName();
    junit.framework.Assert.assertNotNull((java.lang.Object)var7);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var6, (java.lang.Object)var7);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test116() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test116");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)", "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test117() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test117");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    junit.framework.TestResult var5 = var3.run();
    junit.framework.TestResult var6 = var3.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var8);
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var6, (java.lang.Object)var8);
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    var13.test();
    junit.framework.TestResult var16 = var13.run();
    com.application.ciadobusao.test.EncontroTeste var19 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var20 = var19.run();
    junit.framework.TestResult var21 = var19.run();
    junit.framework.TestResult var22 = var19.run();
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var25 = var24.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var24);
    java.lang.String var27 = var24.toString();
    java.lang.String var28 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var22, (java.lang.Object)var24);
    com.application.ciadobusao.test.EncontroTeste var29 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var30 = var29.run();
    junit.framework.TestResult var31 = var29.run();
    java.lang.String var32 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var22, (java.lang.Object)var31);
    var13.run(var31);
    var8.run(var31);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("", (java.lang.Object)0L, (java.lang.Object)var8);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var27.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);

  }

  public void test118() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test118");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    int var1 = var0.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var5 = var4.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var4);
    junit.framework.TestResult var7 = var4.run();
    var4.test();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var4);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var1, (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test119() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test119");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("", "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", " expected:<10> but was:<10>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test120() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test120");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test121() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test121");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (-1), 0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test122() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test122");


    junit.framework.Assert.assertEquals(" expected:<10> but was:<10>", 100.0f, 10.0f, 100.0f);

  }

  public void test123() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test123");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(1.0d, 0.0d, 0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test124() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test124");


    junit.framework.Assert.assertEquals("hi!", 0.0f, (-1.0f), 1.0f);

  }

  public void test125() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test125");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", 0L, 1L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test126() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test126");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var4 = var0.getName();
    java.lang.String var5 = var0.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test127() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test127");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var1);
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var7 = var1.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    junit.framework.TestResult var9 = var1.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test128() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test128");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    junit.framework.TestResult var5 = var3.run();
    junit.framework.TestResult var6 = var3.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var8);
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var6, (java.lang.Object)var8);
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    junit.framework.TestResult var15 = var13.run();
    java.lang.String var16 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var6, (java.lang.Object)var15);
    java.lang.Object var17 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var17, (java.lang.Object)var18);
    junit.framework.TestResult var20 = var18.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var15, (java.lang.Object)var18);
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    int var23 = var22.countTestCases();
    java.lang.String var24 = var22.getName();
    junit.framework.TestResult var25 = var22.run();
    int var26 = var22.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var28 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var29 = var28.toString();
    var28.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var32 = var28.countTestCases();
    java.lang.String var34 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var28, (java.lang.Object)true);
    java.lang.String var35 = var28.toString();
    java.lang.String var36 = var28.toString();
    junit.framework.TestResult var37 = var28.run();
    var22.run(var37);
    var18.run(var37);
    java.lang.Object var42 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var43 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var42, (java.lang.Object)var43);
    com.application.ciadobusao.test.EncontroTeste var46 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var47 = var46.toString();
    var46.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var50 = var46.countTestCases();
    java.lang.String var52 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var46, (java.lang.Object)true);
    java.lang.String var53 = var46.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var43, (java.lang.Object)var53);
    com.application.ciadobusao.test.EncontroTeste var55 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var56 = var55.toString();
    var55.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var59 = var55.countTestCases();
    int var60 = var55.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var53, (java.lang.Object)var55);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var37, (java.lang.Object)var53);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var29.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var34.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var35.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var36.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var47.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var52.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var53.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var56.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);

  }

  public void test129() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test129");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (short)(-1), (short)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test130() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test130");


    junit.framework.Assert.assertTrue("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", true);

  }

  public void test131() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test131");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", '#', 'a');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test132() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test132");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test133() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test133");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 100.0d, 10.0d, 1.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test134() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test134");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var2);
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var8 = var2.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var2);
    junit.framework.TestResult var10 = var2.run();
    junit.framework.TestResult var11 = var2.run();
    java.lang.Object var13 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var13, (java.lang.Object)var14);
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var18 = var17.toString();
    var17.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var21 = var17.countTestCases();
    java.lang.String var23 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var17, (java.lang.Object)true);
    java.lang.String var24 = var17.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var14, (java.lang.Object)var24);
    java.lang.String var26 = var14.toString();
    junit.framework.TestResult var27 = var14.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2, (java.lang.Object)var14);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var23.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);

  }

  public void test135() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test135");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    int var3 = var2.countTestCases();
    java.lang.String var4 = var2.getName();
    junit.framework.TestResult var5 = var2.run();
    int var6 = var2.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var7.run(var10);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var10);
    int var13 = var2.countTestCases();
    java.lang.Object var14 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var14, (java.lang.Object)var15);
    java.lang.String var17 = var15.toString();
    junit.framework.TestResult var18 = var15.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var2, (java.lang.Object)var18);
    var2.test();
    junit.framework.TestResult var21 = var2.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var2);
    int var23 = var2.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var25 = var24.run();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var27 = var26.run();
    var26.test();
    junit.framework.TestResult var29 = var26.run();
    var24.run(var29);
    junit.framework.TestResult var31 = var24.run();
    java.lang.String var32 = var24.getName();
    var24.setName("hi!");
    java.lang.String var35 = var24.toString();
    java.lang.String var36 = junit.framework.Assert.format("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var23, (java.lang.Object)var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "hi!(com.application.ciadobusao.test.EncontroTeste)"+ "'", var35.equals("hi!(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var36.equals("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>"));

  }

  public void test136() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test136");


    junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", "null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >");

  }

  public void test137() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test137");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    var5.test();
    junit.framework.TestResult var8 = var5.run();
    var3.run(var8);
    junit.framework.TestResult var10 = var3.run();
    java.lang.String var11 = var3.getName();
    java.lang.String var12 = var3.getName();
    junit.framework.TestResult var13 = var3.run();
    junit.framework.Assert.assertNotNull("", (java.lang.Object)var3);
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    junit.framework.TestResult var18 = var16.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var16);
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var22 = var21.toString();
    com.application.ciadobusao.test.EncontroTeste var23 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var24 = var23.run();
    var21.run(var24);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var24);
    var16.run(var24);
    junit.framework.Assert.assertNotSame("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)"", (java.lang.Object)var24);
    com.application.ciadobusao.test.EncontroTeste var29 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var30 = var29.run();
    var29.test();
    java.lang.String var32 = var29.getName();
    com.application.ciadobusao.test.EncontroTeste var33 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var34 = var33.run();
    var29.run(var34);
    java.lang.String var36 = var29.toString();
    var29.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var24, (java.lang.Object)var29);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var36.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test138() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test138");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    java.lang.String var3 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var5 = var4.toString();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    var4.run(var7);
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var11.test();
    junit.framework.TestResult var14 = var11.run();
    var9.run(var14);
    var4.run(var14);
    var1.run(var14);
    var1.test();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var3.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test139() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test139");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    int var3 = var2.countTestCases();
    java.lang.String var4 = var2.getName();
    junit.framework.TestResult var5 = var2.run();
    int var6 = var2.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var7.run(var10);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var10);
    int var13 = var2.countTestCases();
    java.lang.Object var14 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var14, (java.lang.Object)var15);
    java.lang.String var17 = var15.toString();
    junit.framework.TestResult var18 = var15.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var2, (java.lang.Object)var18);
    var2.test();
    junit.framework.TestResult var21 = var2.run();
    junit.framework.TestResult var22 = var2.run();
    java.lang.Object var23 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var23, (java.lang.Object)var24);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2, var23);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test140() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test140");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    var0.test();
    junit.framework.TestResult var3 = var0.run();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    junit.framework.TestResult var8 = var6.run();
    junit.framework.TestResult var9 = var6.run();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var11);
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var9, (java.lang.Object)var11);
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    junit.framework.TestResult var18 = var16.run();
    java.lang.String var19 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var9, (java.lang.Object)var18);
    var0.run(var18);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test141() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test141");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", 0.0f, 1.0f, 100.0f);

  }

  public void test142() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test142");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((-1), 1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test143() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test143");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", (-1L), (-1L));

  }

  public void test144() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test144");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    junit.framework.TestResult var4 = var1.run();
    int var5 = var1.countTestCases();
    java.lang.Object var8 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var8, (java.lang.Object)var9);
    java.lang.String var11 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var9);
    java.lang.String var12 = var9.toString();
    var9.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.Assert.assertNotSame("hi! expected:<100> but was:<10>", (java.lang.Object)var1, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.Object var16 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var16, (java.lang.Object)var17);
    junit.framework.TestResult var19 = var17.run();
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    var20.test();
    junit.framework.TestResult var23 = var20.run();
    int var24 = var20.countTestCases();
    junit.framework.TestResult var25 = var20.run();
    var17.run(var25);
    junit.framework.Assert.assertNotSame((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var25);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var25);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var11.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);

  }

  public void test145() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test145");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var1);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var7 = var6.toString();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var6.run(var9);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var9);
    var1.run(var9);
    junit.framework.TestResult var13 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    junit.framework.TestResult var18 = var16.run();
    junit.framework.TestResult var19 = var16.run();
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var22 = var21.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var21);
    java.lang.String var24 = var21.toString();
    java.lang.String var25 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var19, (java.lang.Object)var21);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var19, (java.lang.Object)100.0f);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var13, (java.lang.Object)var19);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test146() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test146");


    java.lang.Object var2 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var2, (java.lang.Object)var3);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var7 = var6.toString();
    var6.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var10 = var6.countTestCases();
    java.lang.String var12 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var6, (java.lang.Object)true);
    java.lang.String var13 = var6.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var3, (java.lang.Object)var13);
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var16 = var15.toString();
    var15.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var19 = var15.countTestCases();
    int var20 = var15.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var13, (java.lang.Object)var15);
    junit.framework.TestResult var22 = var15.run();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var26 = var25.toString();
    junit.framework.TestResult var27 = var25.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var27);
    com.application.ciadobusao.test.EncontroTeste var30 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var31 = var30.run();
    var30.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var30, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var35 = var30.getName();
    var30.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var38 = var30.run();
    junit.framework.TestResult var39 = var30.run();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var30);
    junit.framework.Assert.assertNotSame((java.lang.Object)var15, (java.lang.Object)var30);
    com.application.ciadobusao.test.EncontroTeste var42 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var43 = var42.run();
    var42.test();
    junit.framework.TestResult var45 = var42.run();
    int var46 = var42.countTestCases();
    int var47 = var42.countTestCases();
    junit.framework.TestResult var48 = var42.run();
    var42.test();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var30, (java.lang.Object)var42);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);

  }

  public void test147() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test147");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var1.run(var4);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.TestResult var11 = var8.run();
    var6.run(var11);
    var1.run(var11);
    java.lang.String var14 = var1.toString();
    int var15 = var1.countTestCases();
    var1.test();
    int var17 = var1.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var19 = var18.run();
    var18.test();
    java.lang.String var21 = var18.toString();
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var23 = var22.toString();
    var22.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var26 = var22.countTestCases();
    int var27 = var22.countTestCases();
    junit.framework.Assert.assertNotSame((java.lang.Object)var18, (java.lang.Object)var27);
    java.lang.String var29 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", (java.lang.Object)var17, (java.lang.Object)var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var21.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var23.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>"+ "'", var29.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>"));

  }

  public void test148() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test148");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100.0d, 0.0d, 10.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test149() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test149");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", "hi!");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test150() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test150");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)100, (byte)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test151() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test151");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((short)10, (short)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test152() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test152");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    java.lang.String var6 = var2.toString();
    java.lang.String var7 = var2.toString();
    var2.test();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    junit.framework.TestResult var13 = var11.run();
    junit.framework.TestResult var14 = var11.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var11);
    java.lang.String var16 = var11.getName();
    int var17 = var11.countTestCases();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var11);
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("hi! expected:<100> but was:<10>", (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);

  }

  public void test153() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test153");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    int var3 = var2.countTestCases();
    java.lang.String var4 = var2.getName();
    junit.framework.TestResult var5 = var2.run();
    int var6 = var2.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var7.run(var10);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var10);
    int var13 = var2.countTestCases();
    java.lang.Object var14 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var14, (java.lang.Object)var15);
    java.lang.String var17 = var15.toString();
    junit.framework.TestResult var18 = var15.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var2, (java.lang.Object)var18);
    var2.test();
    junit.framework.TestResult var21 = var2.run();
    java.lang.Object var22 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var23 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var22, (java.lang.Object)var23);
    java.lang.String var25 = var23.toString();
    var23.setName("hi!");
    junit.framework.TestResult var28 = var23.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("hi! expected:<100> but was:<10>", (java.lang.Object)var2, (java.lang.Object)var23);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);

  }

  public void test154() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test154");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertFalse("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test155() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test155");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var1.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test156() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test156");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    junit.framework.TestResult var2 = var0.run();
    junit.framework.TestResult var3 = var0.run();
    java.lang.String var4 = var0.toString();
    java.lang.String var5 = var0.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test157() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test157");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", 10L, 10L);

  }

  public void test158() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test158");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    int var4 = var3.countTestCases();
    java.lang.String var5 = var3.getName();
    junit.framework.TestResult var6 = var3.run();
    int var7 = var3.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var9 = var8.toString();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var8.run(var11);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var3, (java.lang.Object)var11);
    int var14 = var3.countTestCases();
    java.lang.Object var15 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var15, (java.lang.Object)var16);
    java.lang.String var18 = var16.toString();
    junit.framework.TestResult var19 = var16.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var3, (java.lang.Object)var19);
    var3.test();
    java.lang.String var23 = junit.framework.Assert.format("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var3, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)");
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var25 = var24.toString();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var27 = var26.run();
    var24.run(var27);
    com.application.ciadobusao.test.EncontroTeste var30 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var31 = var30.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var30);
    java.lang.String var33 = var30.toString();
    int var34 = var30.countTestCases();
    int var35 = var30.countTestCases();
    java.lang.String var36 = var30.getName();
    junit.framework.Assert.assertNotSame((java.lang.Object)var27, (java.lang.Object)var30);
    var30.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var23.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var33.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);

  }

  public void test159() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test159");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (short)1, (short)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test160() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test160");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var3.test();
    junit.framework.TestResult var6 = var3.run();
    var1.run(var6);
    junit.framework.TestResult var8 = var1.run();
    java.lang.String var9 = var1.getName();
    var1.setName("hi!");
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var14 = var13.toString();
    var13.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var17 = var13.countTestCases();
    java.lang.String var19 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var13, (java.lang.Object)true);
    java.lang.String var20 = var13.toString();
    java.lang.String var21 = var13.toString();
    java.lang.String var22 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var1, (java.lang.Object)var13);
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var26 = var25.run();
    junit.framework.TestResult var27 = var25.run();
    junit.framework.TestResult var28 = var25.run();
    com.application.ciadobusao.test.EncontroTeste var30 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var31 = var30.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var30);
    java.lang.String var33 = var30.toString();
    java.lang.String var34 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var28, (java.lang.Object)var30);
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var28);
    var1.run(var28);
    com.application.ciadobusao.test.EncontroTeste var38 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var39 = var38.toString();
    var38.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var42 = var38.countTestCases();
    java.lang.String var44 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var38, (java.lang.Object)true);
    java.lang.String var45 = var38.toString();
    java.lang.String var46 = var38.toString();
    junit.framework.TestResult var47 = var38.run();
    java.lang.Object var48 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var49 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var48, (java.lang.Object)var49);
    java.lang.String var51 = var49.toString();
    junit.framework.TestResult var52 = var49.run();
    var38.run(var52);
    junit.framework.Assert.assertNotSame((java.lang.Object)var1, (java.lang.Object)var52);
    var1.setName("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var1.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var20.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var21.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var33.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var39.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var44.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var45.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var46.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var51.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);

  }

  public void test161() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test161");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    java.lang.String var2 = var0.toString();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var4 = var3.toString();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    var3.run(var6);
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var10.test();
    junit.framework.TestResult var13 = var10.run();
    var8.run(var13);
    var3.run(var13);
    var0.run(var13);
    com.application.ciadobusao.test.EncontroTeste var19 = new com.application.ciadobusao.test.EncontroTeste();
    int var20 = var19.countTestCases();
    java.lang.String var21 = var19.getName();
    junit.framework.TestResult var22 = var19.run();
    int var23 = var19.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var25 = var24.toString();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var27 = var26.run();
    var24.run(var27);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var19, (java.lang.Object)var27);
    int var30 = var19.countTestCases();
    java.lang.Object var31 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var32 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var31, (java.lang.Object)var32);
    java.lang.String var34 = var32.toString();
    junit.framework.TestResult var35 = var32.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var19, (java.lang.Object)var35);
    junit.framework.Assert.assertNotSame((java.lang.Object)(short)100, (java.lang.Object)var35);
    var0.run(var35);
    junit.framework.TestResult var39 = var0.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var34.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);

  }

  public void test162() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test162");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var1.run(var4);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var4);
    junit.framework.Assert.assertNotNull((java.lang.Object)var4);
    junit.framework.Assert.assertNotNull((java.lang.Object)var4);
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var9.test();
    java.lang.String var12 = var9.toString();
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var14 = var13.toString();
    var13.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var17 = var13.countTestCases();
    int var18 = var13.countTestCases();
    junit.framework.Assert.assertNotSame((java.lang.Object)var9, (java.lang.Object)var18);
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    junit.framework.TestResult var22 = var20.run();
    junit.framework.TestResult var23 = var20.run();
    var20.test();
    var20.test();
    junit.framework.Assert.assertNotSame((java.lang.Object)var9, (java.lang.Object)var20);
    java.lang.String var27 = var20.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var4, (java.lang.Object)var20);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);

  }

  public void test163() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test163");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2);
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var7.run(var10);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var10);
    var2.run(var10);
    var2.test();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    var16.test();
    junit.framework.TestResult var19 = var16.run();
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var23 = var22.run();
    junit.framework.TestResult var24 = var22.run();
    junit.framework.TestResult var25 = var22.run();
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var28 = var27.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var27);
    java.lang.String var30 = var27.toString();
    java.lang.String var31 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var25, (java.lang.Object)var27);
    com.application.ciadobusao.test.EncontroTeste var32 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var33 = var32.run();
    junit.framework.TestResult var34 = var32.run();
    java.lang.String var35 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var25, (java.lang.Object)var34);
    var16.run(var34);
    java.lang.String var37 = var16.getName();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var16);
    junit.framework.Assert.assertNotSame("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2, (java.lang.Object)var16);
    com.application.ciadobusao.test.EncontroTeste var40 = new com.application.ciadobusao.test.EncontroTeste();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var16, (java.lang.Object)var40);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var30.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);

  }

  public void test164() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test164");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", "hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test165() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test165");


    junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", true, true);

  }

  public void test166() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test166");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test167() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test167");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test168() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test168");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotNull((java.lang.Object)var0);
    junit.framework.TestResult var2 = var0.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test169() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test169");


    junit.framework.Assert.assertFalse("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", false);

  }

  public void test170() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test170");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2);
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var8, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var13 = var8.getName();
    var8.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var16 = var8.run();
    var8.test();
    junit.framework.Assert.assertNotNull(" expected:<10> but was:<10>", (java.lang.Object)var8);
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var8);
    var8.test();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var8);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test171() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test171");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var1);
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var7 = var1.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    junit.framework.TestResult var9 = var1.run();
    junit.framework.TestResult var10 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var11.test();
    java.lang.String var14 = var11.getName();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var16 = var15.run();
    var11.run(var16);
    com.application.ciadobusao.test.EncontroTeste var19 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var20 = var19.run();
    junit.framework.TestResult var21 = var19.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var19);
    var19.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var25 = var19.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var19);
    junit.framework.TestResult var27 = var19.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var11, (java.lang.Object)var19);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var1, (java.lang.Object)var11);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);

  }

  public void test172() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test172");


    junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 0.0d, 0.0d, 100.0d);

  }

  public void test173() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test173");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var4 = var0.getName();
    java.lang.Object var6 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var6, (java.lang.Object)var7);
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var11 = var10.toString();
    var10.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var14 = var10.countTestCases();
    java.lang.String var16 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var10, (java.lang.Object)true);
    java.lang.String var17 = var10.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var7, (java.lang.Object)var17);
    java.lang.String var19 = var7.toString();
    junit.framework.TestResult var20 = var7.run();
    var0.run(var20);
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotNull((java.lang.Object)var22);
    junit.framework.TestResult var24 = var22.run();
    java.lang.String var25 = var22.getName();
    int var26 = var22.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var20, (java.lang.Object)var26);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);

  }

  public void test174() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test174");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    junit.framework.TestResult var6 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    var7.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var11 = var7.countTestCases();
    int var12 = var7.countTestCases();
    java.lang.String var13 = var7.getName();
    java.lang.String var14 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var6, (java.lang.Object)var7);
    junit.framework.TestResult var15 = var7.run();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var17 = var16.toString();
    var16.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var20 = var16.countTestCases();
    int var21 = var16.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var23 = var22.run();
    var22.test();
    junit.framework.Assert.assertNotNull((java.lang.Object)var22);
    junit.framework.Assert.assertNotSame((java.lang.Object)var21, (java.lang.Object)var22);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var7, (java.lang.Object)var22);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);

  }

  public void test175() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test175");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(1.0f, 10.0f, 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test176() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test176");


    junit.framework.Assert.assertEquals("hi!", (short)100, (short)100);

  }

  public void test177() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test177");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var5 = var1.getName();
    java.lang.String var6 = var1.toString();
    var1.setName("hi!(com.application.ciadobusao.test.EncontroTeste)");
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var11 = var10.toString();
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    var10.run(var13);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var13);
    var1.run(var13);
    int var17 = var1.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var19 = var18.run();
    var18.test();
    junit.framework.TestResult var21 = var18.run();
    int var22 = var18.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var17, (java.lang.Object)var18);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);

  }

  public void test178() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test178");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", (byte)10, (byte)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test179() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test179");


    junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 1.0f, 0.0f, 100.0f);

  }

  public void test180() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test180");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    int var6 = var2.countTestCases();
    java.lang.Object var9 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var9, (java.lang.Object)var10);
    java.lang.String var12 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var10);
    java.lang.String var13 = var10.toString();
    var10.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.Assert.assertNotSame("hi! expected:<100> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.Object var17 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var17, (java.lang.Object)var18);
    junit.framework.TestResult var20 = var18.run();
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var22 = var21.run();
    var21.test();
    junit.framework.TestResult var24 = var21.run();
    int var25 = var21.countTestCases();
    junit.framework.TestResult var26 = var21.run();
    var18.run(var26);
    junit.framework.Assert.assertNotSame((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var26);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var26);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var12.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);

  }

  public void test181() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test181");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var0.run(var3);
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    var7.test();
    junit.framework.TestResult var10 = var7.run();
    var5.run(var10);
    var0.run(var10);
    java.lang.String var13 = var0.toString();
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var18 = var17.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var17);
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    var20.test();
    java.lang.String var23 = var20.getName();
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var25 = var24.run();
    var20.run(var25);
    var17.run(var25);
    com.application.ciadobusao.test.EncontroTeste var28 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var29 = var28.run();
    com.application.ciadobusao.test.EncontroTeste var30 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var31 = var30.run();
    var30.test();
    junit.framework.TestResult var33 = var30.run();
    var28.run(var33);
    var17.run(var33);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var0, (java.lang.Object)var33);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);

  }

  public void test182() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test182");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertFalse("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test183() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test183");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", ' ', ' ');

  }

  public void test184() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test184");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (-1L), 1L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test185() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test185");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)"hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test186() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test186");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test187() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test187");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (-1.0f), 10.0f, 1.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test188() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test188");


    junit.framework.Assert.assertNotNull((java.lang.Object)(short)(-1));

  }

  public void test189() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test189");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var3 = var2.toString();
    var2.setName(" expected:<10> but was:<10>");
    junit.framework.TestResult var6 = var2.run();
    java.lang.String var7 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)(byte)10, (java.lang.Object)var2);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var2.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var3.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>"));

  }

  public void test190() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test190");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((short)(-1), (short)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test191() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test191");


    java.lang.Object var3 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var3, (java.lang.Object)var4);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)(short)(-1), var3);
    java.lang.Object var9 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var9, (java.lang.Object)var10);
    java.lang.String var12 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var10);
    java.lang.String var13 = var10.toString();
    java.lang.String var14 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", var3, (java.lang.Object)var13);
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    junit.framework.TestResult var18 = var16.run();
    junit.framework.TestResult var19 = var16.run();
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var22 = var21.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var21);
    java.lang.String var24 = var21.toString();
    java.lang.String var25 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var19, (java.lang.Object)var21);
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var27 = var26.run();
    var26.test();
    junit.framework.TestResult var29 = var26.run();
    com.application.ciadobusao.test.EncontroTeste var32 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var33 = var32.run();
    junit.framework.TestResult var34 = var32.run();
    junit.framework.TestResult var35 = var32.run();
    com.application.ciadobusao.test.EncontroTeste var37 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var38 = var37.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var37);
    java.lang.String var40 = var37.toString();
    java.lang.String var41 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var35, (java.lang.Object)var37);
    com.application.ciadobusao.test.EncontroTeste var42 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var43 = var42.run();
    junit.framework.TestResult var44 = var42.run();
    java.lang.String var45 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var35, (java.lang.Object)var44);
    var26.run(var44);
    var21.run(var44);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var14, (java.lang.Object)var44);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var12.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var40.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);

  }

  public void test192() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test192");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", true, false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test193() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test193");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    junit.framework.TestResult var3 = var1.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    var6.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    junit.framework.TestResult var10 = var6.run();
    junit.framework.Assert.assertNotNull("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var10);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var1, (java.lang.Object)"hi!(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test194() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test194");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (-1L), 0L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test195() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test195");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", (short)(-1), (short)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test196() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test196");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", 0.0f, 0.0f, 100.0f);

  }

  public void test197() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test197");


    java.lang.Object var2 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var2, (java.lang.Object)var3);
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    var5.test();
    junit.framework.TestResult var8 = var5.run();
    int var9 = var5.countTestCases();
    junit.framework.TestResult var10 = var5.run();
    junit.framework.Assert.assertNotSame("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", var2, (java.lang.Object)var10);
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    var13.test();
    junit.framework.TestResult var16 = var13.run();
    int var17 = var13.countTestCases();
    junit.framework.Assert.assertNotSame("hi!", (java.lang.Object)var13, (java.lang.Object)0);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);

  }

  public void test198() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test198");


    java.lang.Object var2 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var2, (java.lang.Object)var3);
    java.lang.String var5 = var3.toString();
    java.lang.String var6 = var3.toString();
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var3);
    junit.framework.TestResult var8 = var3.run();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var10 = var9.toString();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var9.run(var12);
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var15 = var14.run();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    var16.test();
    junit.framework.TestResult var19 = var16.run();
    var14.run(var19);
    var9.run(var19);
    java.lang.String var22 = var9.toString();
    junit.framework.TestResult var23 = var9.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi! expected:<100> but was:<10>", (java.lang.Object)var3, (java.lang.Object)var23);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);

  }

  public void test199() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test199");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var1.run(var4);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var4);
    junit.framework.Assert.assertNotNull((java.lang.Object)var4);
    junit.framework.Assert.assertNotSame((java.lang.Object)var4, (java.lang.Object)true);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test200() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test200");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", 1, 10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test201() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test201");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");

  }

  public void test202() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test202");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100.0d, 1.0d, 0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test203() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test203");


    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    int var5 = var4.countTestCases();
    java.lang.String var6 = var4.getName();
    junit.framework.TestResult var7 = var4.run();
    int var8 = var4.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var10 = var9.toString();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var9.run(var12);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var4, (java.lang.Object)var12);
    int var15 = var4.countTestCases();
    java.lang.Object var16 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var16, (java.lang.Object)var17);
    java.lang.String var19 = var17.toString();
    junit.framework.TestResult var20 = var17.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var4, (java.lang.Object)var20);
    junit.framework.Assert.assertNotNull((java.lang.Object)var20);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)100, (java.lang.Object)var20);
    java.lang.Object var28 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var29 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var28, (java.lang.Object)var29);
    com.application.ciadobusao.test.EncontroTeste var32 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var33 = var32.toString();
    var32.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var36 = var32.countTestCases();
    java.lang.String var38 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var32, (java.lang.Object)true);
    java.lang.String var39 = var32.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var29, (java.lang.Object)var39);
    com.application.ciadobusao.test.EncontroTeste var41 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var42 = var41.toString();
    var41.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var45 = var41.countTestCases();
    int var46 = var41.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var39, (java.lang.Object)var41);
    junit.framework.TestResult var48 = var41.run();
    java.lang.String var49 = var41.getName();
    java.lang.String var50 = junit.framework.Assert.format("hi!", (java.lang.Object)"hi!", (java.lang.Object)var41);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)"hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var33.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var38.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var39.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var42.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var49.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var50.equals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));

  }

  public void test204() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test204");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(0.0f, 100.0f, 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test205() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test205");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    junit.framework.TestResult var4 = var1.run();
    int var5 = var1.countTestCases();
    junit.framework.TestResult var6 = var1.run();
    java.lang.String var7 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var9 = var8.toString();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var8.run(var11);
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var16 = var15.run();
    var15.test();
    junit.framework.TestResult var18 = var15.run();
    var13.run(var18);
    var8.run(var18);
    java.lang.String var21 = var8.toString();
    junit.framework.TestResult var22 = var8.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1, (java.lang.Object)var8);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var21.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test206() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test206");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    junit.framework.TestResult var3 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    junit.framework.TestResult var7 = var5.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var5);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(" expected:<10> but was:<10>", (java.lang.Object)var3, (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test207() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test207");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", 1, 1);

  }

  public void test208() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test208");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test209() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test209");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var5 = var1.countTestCases();
    int var6 = var1.countTestCases();
    java.lang.String var7 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var9 = var8.toString();
    var8.setName(" expected:<10> but was:<10>");
    junit.framework.TestResult var12 = var8.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1, (java.lang.Object)var12);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test210() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test210");


    junit.framework.Assert.assertFalse("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", false);

  }

  public void test211() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test211");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var7 = var2.getName();
    junit.framework.TestResult var8 = var2.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var8);
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var11 = var10.toString();
    var10.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var14 = var10.getName();
    java.lang.String var15 = var10.toString();
    var10.setName("hi!(com.application.ciadobusao.test.EncontroTeste)");
    com.application.ciadobusao.test.EncontroTeste var19 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var20 = var19.toString();
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var22 = var21.run();
    var19.run(var22);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var22);
    var10.run(var22);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var8, (java.lang.Object)var10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var15.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var20.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test212() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test212");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test213() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test213");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var3);
    junit.framework.TestResult var6 = var3.run();
    var3.test();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var3);
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test214() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test214");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var1);
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    var1.setName("hi! expected:<100> but was:<10>");
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var10 = var9.toString();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var9.run(var12);
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var16 = var15.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var15);
    java.lang.String var18 = var15.toString();
    int var19 = var15.countTestCases();
    int var20 = var15.countTestCases();
    java.lang.String var21 = var15.getName();
    junit.framework.Assert.assertNotSame((java.lang.Object)var12, (java.lang.Object)var15);
    var1.run(var12);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var1.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);

  }

  public void test215() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test215");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(10.0d, (-1.0d), 1.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test216() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test216");


    junit.framework.Assert.assertFalse("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", false);

  }

  public void test217() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test217");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    java.lang.String var6 = var2.toString();
    java.lang.String var7 = var2.toString();
    var2.test();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2);
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test218() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test218");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(" expected:<10> but was:<10>", '4', 'a');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test219() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test219");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    java.lang.String var3 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var5 = var4.toString();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    var4.run(var7);
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var11.test();
    junit.framework.TestResult var14 = var11.run();
    var9.run(var14);
    var4.run(var14);
    var1.run(var14);
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    int var21 = var20.countTestCases();
    java.lang.String var22 = var20.getName();
    junit.framework.TestResult var23 = var20.run();
    int var24 = var20.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var26 = var25.toString();
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var28 = var27.run();
    var25.run(var28);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var20, (java.lang.Object)var28);
    int var31 = var20.countTestCases();
    java.lang.Object var32 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var33 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var32, (java.lang.Object)var33);
    java.lang.String var35 = var33.toString();
    junit.framework.TestResult var36 = var33.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var20, (java.lang.Object)var36);
    junit.framework.Assert.assertNotSame((java.lang.Object)(short)100, (java.lang.Object)var36);
    var1.run(var36);
    com.application.ciadobusao.test.EncontroTeste var40 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var41 = var40.run();
    var40.test();
    junit.framework.TestResult var43 = var40.run();
    int var44 = var40.countTestCases();
    int var45 = var40.countTestCases();
    junit.framework.TestResult var46 = var40.run();
    java.lang.Object var47 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var48 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var47, (java.lang.Object)var48);
    junit.framework.TestResult var50 = var48.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var46, (java.lang.Object)var50);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var1, (java.lang.Object)var46);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var3.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var35.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);

  }

  public void test220() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test220");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test221() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test221");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var1);
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var7 = var1.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    junit.framework.TestResult var9 = var1.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var1, (java.lang.Object)'#');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test222() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test222");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 0, (-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test223() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test223");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 10L, 0L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test224() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test224");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    junit.framework.TestResult var6 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    var7.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var11 = var7.countTestCases();
    int var12 = var7.countTestCases();
    java.lang.String var13 = var7.getName();
    java.lang.String var14 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var6, (java.lang.Object)var7);
    junit.framework.Assert.assertNotNull((java.lang.Object)var7);
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    int var17 = var16.countTestCases();
    java.lang.String var18 = var16.getName();
    int var19 = var16.countTestCases();
    java.lang.String var20 = var16.getName();
    junit.framework.Assert.assertNotSame((java.lang.Object)var16, (java.lang.Object)true);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>", (java.lang.Object)var7, (java.lang.Object)true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);

  }

  public void test225() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test225");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var5 = var1.getName();
    java.lang.String var6 = var1.toString();
    var1.setName("hi!(com.application.ciadobusao.test.EncontroTeste)");
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var11 = var10.toString();
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    var10.run(var13);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var13);
    var1.run(var13);
    int var17 = var1.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var19 = var18.run();
    var18.test();
    java.lang.String var21 = var18.toString();
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var23 = var22.run();
    junit.framework.TestResult var24 = var22.run();
    junit.framework.TestResult var25 = var22.run();
    var18.run(var25);
    junit.framework.Assert.assertNotNull((java.lang.Object)var18);
    java.lang.String var28 = var18.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var17, (java.lang.Object)var18);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var21.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);

  }

  public void test226() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test226");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (short)10, (short)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test227() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test227");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (-1), 0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test228() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test228");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    java.lang.String var4 = var1.getName();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    var1.run(var6);
    java.lang.String var8 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >");
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    var12.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var12, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var17 = var12.getName();
    var12.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    var20.test();
    java.lang.String var23 = var20.getName();
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var25 = var24.run();
    var20.run(var25);
    junit.framework.TestResult var27 = var20.run();
    var12.run(var27);
    com.application.ciadobusao.test.EncontroTeste var30 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var31 = var30.run();
    junit.framework.TestResult var32 = var30.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var30);
    var30.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var36 = var30.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var30);
    junit.framework.TestResult var38 = var30.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var12, (java.lang.Object)var38);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1, (java.lang.Object)var38);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);

  }

  public void test229() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test229");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    var0.run(var5);
    java.lang.String var7 = var0.getName();
    java.lang.String var8 = var0.toString();
    java.lang.String var9 = var0.getName();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var10.test();
    java.lang.String var13 = var10.toString();
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var15 = var14.run();
    junit.framework.TestResult var16 = var14.run();
    junit.framework.TestResult var17 = var14.run();
    var10.run(var17);
    junit.framework.Assert.assertNotNull((java.lang.Object)var10);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var0, (java.lang.Object)var10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test230() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test230");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test231() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test231");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2);
    java.lang.String var5 = var2.toString();
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    var2.test();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var10 = var9.toString();
    var9.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var13 = var9.getName();
    java.lang.String var14 = var9.toString();
    var9.setName("hi!(com.application.ciadobusao.test.EncontroTeste)");
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var19 = var18.toString();
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    var18.run(var21);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var21);
    var9.run(var21);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2, (java.lang.Object)var21);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);

  }

  public void test232() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test232");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test233() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test233");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var2);
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var8 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var10 = var9.toString();
    var9.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var13 = var9.countTestCases();
    int var14 = var9.countTestCases();
    int var15 = var9.countTestCases();
    junit.framework.Assert.assertNotSame("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var9);
    java.lang.String var17 = var9.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var9);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test234() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test234");


    java.lang.Object var1 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var1, (java.lang.Object)var2);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.TestResult var11 = var8.run();
    var6.run(var11);
    junit.framework.TestResult var13 = var6.run();
    java.lang.String var14 = var6.getName();
    java.lang.String var15 = var6.getName();
    junit.framework.TestResult var16 = var6.run();
    junit.framework.Assert.assertNotNull("", (java.lang.Object)var6);
    com.application.ciadobusao.test.EncontroTeste var19 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var20 = var19.run();
    junit.framework.TestResult var21 = var19.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var19);
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var25 = var24.toString();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var27 = var26.run();
    var24.run(var27);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var27);
    var19.run(var27);
    junit.framework.Assert.assertNotSame("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)"", (java.lang.Object)var27);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var2, (java.lang.Object)"hi!(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);

  }

  public void test235() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test235");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (byte)0, (byte)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test236() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test236");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", 100L, (-1L));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test237() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test237");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (byte)1, (byte)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test238() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test238");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (short)10, (short)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test239() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test239");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", 10, 1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test240() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test240");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (byte)(-1), (byte)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test241() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test241");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var1.run(var4);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.TestResult var11 = var8.run();
    var6.run(var11);
    var1.run(var11);
    java.lang.String var14 = var1.toString();
    java.lang.Object var15 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var15, (java.lang.Object)var16);
    java.lang.String var18 = var16.toString();
    junit.framework.TestResult var19 = var16.run();
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var22 = var21.run();
    var21.test();
    java.lang.String var24 = var21.toString();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var26 = var25.run();
    junit.framework.TestResult var27 = var25.run();
    junit.framework.TestResult var28 = var25.run();
    var21.run(var28);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var21, (java.lang.Object)(byte)100);
    junit.framework.Assert.assertNotSame((java.lang.Object)var19, (java.lang.Object)(byte)100);
    junit.framework.Assert.assertNotSame((java.lang.Object)var19, (java.lang.Object)0.0f);
    var1.run(var19);
    com.application.ciadobusao.test.EncontroTeste var37 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var38 = var37.run();
    com.application.ciadobusao.test.EncontroTeste var39 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var40 = var39.run();
    var39.test();
    junit.framework.TestResult var42 = var39.run();
    var37.run(var42);
    junit.framework.TestResult var44 = var37.run();
    java.lang.String var45 = var37.getName();
    var37.setName("hi!");
    com.application.ciadobusao.test.EncontroTeste var49 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var50 = var49.toString();
    var49.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var53 = var49.countTestCases();
    java.lang.String var55 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var49, (java.lang.Object)true);
    java.lang.String var56 = var49.toString();
    java.lang.String var57 = var49.toString();
    java.lang.String var58 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var37, (java.lang.Object)var49);
    com.application.ciadobusao.test.EncontroTeste var61 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var62 = var61.run();
    junit.framework.TestResult var63 = var61.run();
    junit.framework.TestResult var64 = var61.run();
    com.application.ciadobusao.test.EncontroTeste var66 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var67 = var66.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var66);
    java.lang.String var69 = var66.toString();
    java.lang.String var70 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var64, (java.lang.Object)var66);
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var64);
    var37.run(var64);
    com.application.ciadobusao.test.EncontroTeste var74 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var75 = var74.toString();
    var74.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var78 = var74.countTestCases();
    java.lang.String var80 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var74, (java.lang.Object)true);
    java.lang.String var81 = var74.toString();
    java.lang.String var82 = var74.toString();
    junit.framework.TestResult var83 = var74.run();
    java.lang.Object var84 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var85 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var84, (java.lang.Object)var85);
    java.lang.String var87 = var85.toString();
    junit.framework.TestResult var88 = var85.run();
    var74.run(var88);
    junit.framework.Assert.assertNotSame((java.lang.Object)var37, (java.lang.Object)var88);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var19, (java.lang.Object)var88);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var50.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var55.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var56.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var57.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var58.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var69.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var75.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var80.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var81.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var82.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var87.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);

  }

  public void test242() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test242");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", '4', 'a');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test243() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test243");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (short)100, (short)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test244() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test244");


    junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste)", 10.0f, 10.0f, 100.0f);

  }

  public void test245() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test245");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    int var3 = var2.countTestCases();
    java.lang.String var4 = var2.getName();
    junit.framework.TestResult var5 = var2.run();
    int var6 = var2.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var7.run(var10);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var10);
    int var13 = var2.countTestCases();
    java.lang.Object var14 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var14, (java.lang.Object)var15);
    java.lang.String var17 = var15.toString();
    junit.framework.TestResult var18 = var15.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var2, (java.lang.Object)var18);
    var2.test();
    junit.framework.TestResult var21 = var2.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var2);
    int var23 = var2.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);

  }

  public void test246() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test246");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.TestResult var5 = var2.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var2);
    java.lang.String var7 = var2.getName();
    junit.framework.TestResult var8 = var2.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var8, (java.lang.Object)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test247() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test247");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var4 = var0.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.TestResult var11 = var8.run();
    var6.run(var11);
    junit.framework.TestResult var13 = var6.run();
    java.lang.String var14 = var6.getName();
    var6.setName("hi!");
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var19 = var18.toString();
    var18.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var22 = var18.countTestCases();
    java.lang.String var24 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var18, (java.lang.Object)true);
    java.lang.String var25 = var18.toString();
    java.lang.String var26 = var18.toString();
    java.lang.String var27 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var6, (java.lang.Object)var18);
    var6.setName("hi! expected:<100> but was:<10>");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var4, (java.lang.Object)var6);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var27.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));

  }

  public void test248() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test248");


    junit.framework.Assert.assertTrue("hi!", true);

  }

  public void test249() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test249");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", 10.0f, 1.0f, 1.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test250() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test250");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    java.lang.String var4 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    int var8 = var7.countTestCases();
    java.lang.String var9 = var7.getName();
    int var10 = var7.countTestCases();
    java.lang.String var11 = var7.getName();
    junit.framework.Assert.assertNotSame((java.lang.Object)var7, (java.lang.Object)true);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var7);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test251() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test251");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    int var2 = var1.countTestCases();
    java.lang.String var3 = var1.getName();
    int var4 = var1.countTestCases();
    java.lang.String var5 = var1.getName();
    java.lang.String var6 = var1.toString();
    int var7 = var1.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    java.lang.String var10 = var8.toString();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var12 = var11.toString();
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    var11.run(var14);
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var19 = var18.run();
    var18.test();
    junit.framework.TestResult var21 = var18.run();
    var16.run(var21);
    var11.run(var21);
    var8.run(var21);
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    int var28 = var27.countTestCases();
    java.lang.String var29 = var27.getName();
    junit.framework.TestResult var30 = var27.run();
    int var31 = var27.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var32 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var33 = var32.toString();
    com.application.ciadobusao.test.EncontroTeste var34 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var35 = var34.run();
    var32.run(var35);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var27, (java.lang.Object)var35);
    int var38 = var27.countTestCases();
    java.lang.Object var39 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var40 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var39, (java.lang.Object)var40);
    java.lang.String var42 = var40.toString();
    junit.framework.TestResult var43 = var40.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var27, (java.lang.Object)var43);
    junit.framework.Assert.assertNotSame((java.lang.Object)(short)100, (java.lang.Object)var43);
    var8.run(var43);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1, (java.lang.Object)var43);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var33.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var42.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);

  }

  public void test252() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test252");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(0.0f, 10.0f, (-1.0f));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test253() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test253");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", '4', '#');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test254() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test254");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var1.run(var4);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.TestResult var11 = var8.run();
    var6.run(var11);
    var1.run(var11);
    java.lang.String var14 = var1.toString();
    junit.framework.TestResult var15 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var19 = var18.run();
    var18.test();
    junit.framework.TestResult var21 = var18.run();
    var16.run(var21);
    java.lang.String var23 = var16.getName();
    java.lang.String var24 = var16.toString();
    java.lang.String var25 = var16.getName();
    int var26 = var16.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals(" expected:<10> but was:<10>", (java.lang.Object)var15, (java.lang.Object)var16);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);

  }

  public void test255() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test255");


    junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", 1L, 1L);

  }

  public void test256() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test256");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", '4', '#');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test257() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test257");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    int var4 = var3.countTestCases();
    java.lang.String var5 = var3.getName();
    junit.framework.TestResult var6 = var3.run();
    int var7 = var3.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var9 = var8.toString();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var8.run(var11);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var3, (java.lang.Object)var11);
    int var14 = var3.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotNull((java.lang.Object)var15);
    java.lang.String var17 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var3, (java.lang.Object)var15);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", (java.lang.Object)var15);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));

  }

  public void test258() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test258");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", 100L, 1L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test259() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test259");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var2);
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var8 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var10 = var9.toString();
    var9.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var13 = var9.countTestCases();
    int var14 = var9.countTestCases();
    int var15 = var9.countTestCases();
    junit.framework.Assert.assertNotSame("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var9);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var2.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);

  }

  public void test260() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test260");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", "hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test261() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test261");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", 10.0f, (-1.0f), (-1.0f));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test262() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test262");


    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var5 = var4.toString();
    var4.setName(" expected:<10> but was:<10>");
    junit.framework.TestResult var8 = var4.run();
    java.lang.String var9 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)(byte)10, (java.lang.Object)var4);
    java.lang.String var10 = var4.getName();
    junit.framework.Assert.assertNotSame((java.lang.Object)0.0d, (java.lang.Object)var4);
    java.lang.String var12 = var4.toString();
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    var13.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    junit.framework.TestResult var17 = var13.run();
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    junit.framework.TestResult var22 = var20.run();
    junit.framework.TestResult var23 = var20.run();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var26 = var25.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var25);
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var23, (java.lang.Object)var25);
    com.application.ciadobusao.test.EncontroTeste var30 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var31 = var30.run();
    junit.framework.TestResult var32 = var30.run();
    java.lang.String var33 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var23, (java.lang.Object)var32);
    var13.run(var23);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10>", (java.lang.Object)var4, (java.lang.Object)var23);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + " expected:<10> but was:<10>"+ "'", var10.equals(" expected:<10> but was:<10>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + " expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals(" expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var28.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);

  }

  public void test263() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test263");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var5 = var1.countTestCases();
    java.lang.String var7 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var1, (java.lang.Object)true);
    java.lang.String var8 = var1.toString();
    int var9 = var1.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    junit.framework.TestResult var12 = var10.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var1, (java.lang.Object)var12);
    java.lang.Object var16 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var16, (java.lang.Object)var17);
    java.lang.String var19 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var17);
    java.lang.String var20 = var17.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var12, (java.lang.Object)var20);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var19.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var20.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test264() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test264");


    java.lang.Object var2 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var2, (java.lang.Object)var3);
    java.lang.String var5 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var3);
    java.lang.String var6 = var3.toString();
    var3.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>");
    junit.framework.Assert.assertNotNull((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var5.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test265() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test265");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1);
    junit.framework.TestResult var4 = var1.run();
    var1.test();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var1.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test266() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test266");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var0.run(var3);
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    var7.test();
    junit.framework.TestResult var10 = var7.run();
    var5.run(var10);
    var0.run(var10);
    java.lang.Object var17 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var17, (java.lang.Object)var18);
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var22 = var21.toString();
    var21.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var25 = var21.countTestCases();
    java.lang.String var27 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var21, (java.lang.Object)true);
    java.lang.String var28 = var21.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var18, (java.lang.Object)var28);
    com.application.ciadobusao.test.EncontroTeste var30 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var31 = var30.toString();
    var30.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var34 = var30.countTestCases();
    int var35 = var30.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var28, (java.lang.Object)var30);
    junit.framework.TestResult var37 = var30.run();
    java.lang.String var38 = var30.getName();
    java.lang.String var39 = junit.framework.Assert.format("hi!", (java.lang.Object)"hi!", (java.lang.Object)var30);
    var30.test();
    junit.framework.Assert.assertNotSame((java.lang.Object)var0, (java.lang.Object)var30);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var27.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var28.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var31.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var38.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var39.equals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));

  }

  public void test267() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test267");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>", false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test268() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test268");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    java.lang.String var4 = var2.toString();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var6 = var5.toString();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    var5.run(var8);
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    var12.test();
    junit.framework.TestResult var15 = var12.run();
    var10.run(var15);
    var5.run(var15);
    var2.run(var15);
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    int var22 = var21.countTestCases();
    java.lang.String var23 = var21.getName();
    junit.framework.TestResult var24 = var21.run();
    int var25 = var21.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var27 = var26.toString();
    com.application.ciadobusao.test.EncontroTeste var28 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var29 = var28.run();
    var26.run(var29);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var21, (java.lang.Object)var29);
    int var32 = var21.countTestCases();
    java.lang.Object var33 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var34 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var33, (java.lang.Object)var34);
    java.lang.String var36 = var34.toString();
    junit.framework.TestResult var37 = var34.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var21, (java.lang.Object)var37);
    junit.framework.Assert.assertNotSame((java.lang.Object)(short)100, (java.lang.Object)var37);
    var2.run(var37);
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var37);
    com.application.ciadobusao.test.EncontroTeste var43 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var44 = var43.run();
    junit.framework.TestResult var45 = var43.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var43);
    com.application.ciadobusao.test.EncontroTeste var48 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var49 = var48.toString();
    com.application.ciadobusao.test.EncontroTeste var50 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var51 = var50.run();
    var48.run(var51);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var51);
    var43.run(var51);
    junit.framework.TestResult var55 = var43.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var55);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)"hi!", (java.lang.Object)var55);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var27.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var36.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var49.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);

  }

  public void test269() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test269");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    int var1 = var0.countTestCases();
    java.lang.String var2 = var0.getName();
    junit.framework.TestResult var3 = var0.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var0);
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >");
    java.lang.String var7 = var0.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >"));

  }

  public void test270() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test270");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", true, true);

  }

  public void test271() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test271");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var7 = var2.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var2);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test272() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test272");


    junit.framework.Assert.assertTrue("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>", true);

  }

  public void test273() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test273");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", 'a', ' ');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test274() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test274");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((-1.0d), 100.0d, 100.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test275() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test275");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var4 = var3.toString();
    var3.setName(" expected:<10> but was:<10>");
    junit.framework.TestResult var7 = var3.run();
    java.lang.String var8 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)(byte)10, (java.lang.Object)var3);
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var10.test();
    junit.framework.TestResult var13 = var10.run();
    int var14 = var10.countTestCases();
    java.lang.Object var17 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var17, (java.lang.Object)var18);
    java.lang.String var20 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var18);
    java.lang.String var21 = var18.toString();
    var18.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.Assert.assertNotSame("hi! expected:<100> but was:<10>", (java.lang.Object)var10, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.Object var25 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var25, (java.lang.Object)var26);
    junit.framework.TestResult var28 = var26.run();
    com.application.ciadobusao.test.EncontroTeste var29 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var30 = var29.run();
    var29.test();
    junit.framework.TestResult var32 = var29.run();
    int var33 = var29.countTestCases();
    junit.framework.TestResult var34 = var29.run();
    var26.run(var34);
    junit.framework.Assert.assertNotSame((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var34);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var34);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var20.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var21.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);

  }

  public void test276() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test276");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var4 = var3.toString();
    junit.framework.TestResult var5 = var3.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var5);
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var8, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var13 = var8.getName();
    var8.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var16 = var8.run();
    junit.framework.TestResult var17 = var8.run();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var8);
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    junit.framework.TestResult var22 = var20.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var20);
    var20.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var26 = var20.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var20);
    junit.framework.TestResult var28 = var20.run();
    junit.framework.TestResult var29 = var20.run();
    int var30 = var20.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var30);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);

  }

  public void test277() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test277");


    junit.framework.Assert.assertEquals("hi!", 0.0d, 1.0d, 10.0d);

  }

  public void test278() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test278");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2);
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    var5.test();
    java.lang.String var8 = var5.getName();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var5.run(var10);
    var2.run(var10);
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var16 = var15.run();
    var15.test();
    junit.framework.TestResult var18 = var15.run();
    var13.run(var18);
    var2.run(var18);
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var22 = var21.toString();
    var21.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var25 = var21.getName();
    java.lang.String var26 = var21.toString();
    var21.setName("hi!(com.application.ciadobusao.test.EncontroTeste)");
    com.application.ciadobusao.test.EncontroTeste var30 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var31 = var30.toString();
    com.application.ciadobusao.test.EncontroTeste var32 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var33 = var32.run();
    var30.run(var33);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var33);
    var21.run(var33);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2, (java.lang.Object)var21);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var31.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);

  }

  public void test279() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test279");


    junit.framework.Assert.assertFalse("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>", false);

  }

  public void test280() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test280");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>", 10.0d, 10.0d, 100.0d);

  }

  public void test281() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test281");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var3.test();
    junit.framework.TestResult var6 = var3.run();
    var1.run(var6);
    junit.framework.TestResult var8 = var1.run();
    java.lang.String var9 = var1.getName();
    var1.setName("hi!");
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var14 = var13.toString();
    var13.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var17 = var13.countTestCases();
    java.lang.String var19 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var13, (java.lang.Object)true);
    java.lang.String var20 = var13.toString();
    java.lang.String var21 = var13.toString();
    java.lang.String var22 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var1, (java.lang.Object)var13);
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var26 = var25.run();
    junit.framework.TestResult var27 = var25.run();
    junit.framework.TestResult var28 = var25.run();
    com.application.ciadobusao.test.EncontroTeste var30 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var31 = var30.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var30);
    java.lang.String var33 = var30.toString();
    java.lang.String var34 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var28, (java.lang.Object)var30);
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var28);
    var1.run(var28);
    com.application.ciadobusao.test.EncontroTeste var38 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var39 = var38.toString();
    var38.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var42 = var38.countTestCases();
    java.lang.String var44 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var38, (java.lang.Object)true);
    java.lang.String var45 = var38.toString();
    java.lang.String var46 = var38.toString();
    junit.framework.TestResult var47 = var38.run();
    java.lang.Object var48 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var49 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var48, (java.lang.Object)var49);
    java.lang.String var51 = var49.toString();
    junit.framework.TestResult var52 = var49.run();
    var38.run(var52);
    junit.framework.Assert.assertNotSame((java.lang.Object)var1, (java.lang.Object)var52);
    var1.setName("");
    junit.framework.Assert.assertNotNull((java.lang.Object)"");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var20.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var21.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var33.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var39.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var44.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var45.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var46.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var51.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);

  }

  public void test282() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test282");


    junit.framework.Assert.assertEquals(' ', ' ');

  }

  public void test283() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test283");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", 0, (-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test284() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test284");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", " expected:<10> but was:<10>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test285() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test285");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    int var1 = var0.countTestCases();
    java.lang.String var2 = var0.getName();
    int var3 = var0.countTestCases();
    java.lang.String var4 = var0.getName();
    java.lang.String var5 = var0.toString();
    int var6 = var0.countTestCases();
    java.lang.String var7 = var0.getName();
    java.lang.String var8 = var0.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test286() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test286");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((-1L), 0L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test287() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test287");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    var0.run(var5);
    junit.framework.TestResult var7 = var0.run();
    java.lang.String var8 = var0.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test288() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test288");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var1.run(var4);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.TestResult var11 = var8.run();
    var6.run(var11);
    var1.run(var11);
    java.lang.String var14 = var1.toString();
    int var15 = var1.countTestCases();
    var1.test();
    int var17 = var1.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    junit.framework.TestResult var22 = var20.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var20);
    var20.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var26 = var20.run();
    var20.test();
    com.application.ciadobusao.test.EncontroTeste var28 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var29 = var28.run();
    junit.framework.TestResult var30 = var28.run();
    junit.framework.TestResult var31 = var28.run();
    var28.test();
    var28.setName(" expected:<10> but was:<10>");
    java.lang.String var35 = junit.framework.Assert.format("hi! expected:<100> but was:<10>", (java.lang.Object)var20, (java.lang.Object)" expected:<10> but was:<10>");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var17, (java.lang.Object)var35);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>"+ "'", var35.equals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>"));

  }

  public void test289() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test289");


    java.lang.Object var1 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var1, (java.lang.Object)var2);
    java.lang.String var4 = var2.toString();
    var2.setName("hi!");
    junit.framework.TestResult var7 = var2.run();
    java.lang.Object var8 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var8, (java.lang.Object)var9);
    java.lang.String var11 = var9.toString();
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    int var13 = var12.countTestCases();
    java.lang.String var14 = var12.getName();
    junit.framework.TestResult var15 = var12.run();
    var9.run(var15);
    var9.setName("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>");
    var9.test();
    java.lang.String var20 = junit.framework.Assert.format("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var2, (java.lang.Object)var9);
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var23 = var22.run();
    junit.framework.TestResult var24 = var22.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var22);
    var22.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var28 = var22.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var22);
    com.application.ciadobusao.test.EncontroTeste var31 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var32 = var31.run();
    var31.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var31, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var36 = var31.getName();
    junit.framework.TestResult var37 = var31.run();
    com.application.ciadobusao.test.EncontroTeste var40 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var41 = var40.run();
    junit.framework.TestResult var42 = var40.run();
    junit.framework.TestResult var43 = var40.run();
    com.application.ciadobusao.test.EncontroTeste var45 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var46 = var45.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var45);
    java.lang.String var48 = var45.toString();
    java.lang.String var49 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var43, (java.lang.Object)var45);
    com.application.ciadobusao.test.EncontroTeste var50 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var51 = var50.run();
    junit.framework.TestResult var52 = var50.run();
    java.lang.String var53 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var43, (java.lang.Object)var52);
    java.lang.Object var54 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var55 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var54, (java.lang.Object)var55);
    junit.framework.TestResult var57 = var55.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var52, (java.lang.Object)var55);
    var31.run(var52);
    var22.run(var52);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var2, (java.lang.Object)var22);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var20.equals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var48.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);

  }

  public void test290() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test290");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1>", false, true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test291() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test291");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    var0.test();
    junit.framework.TestResult var3 = var0.run();
    int var4 = var0.countTestCases();
    junit.framework.TestResult var5 = var0.run();
    java.lang.String var6 = var0.toString();
    int var7 = var0.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);

  }

  public void test292() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test292");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", 0, 1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test293() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test293");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (short)0, (short)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test294() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test294");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    java.lang.String var4 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    junit.framework.TestResult var7 = var5.run();
    junit.framework.TestResult var8 = var5.run();
    var1.run(var8);
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)");
    var1.test();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var16 = var15.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var15);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var1, (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test295() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test295");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var7 = var2.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var2);
    int var9 = var2.countTestCases();
    int var10 = var2.countTestCases();
    java.lang.String var12 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", (java.lang.Object)var10, (java.lang.Object)(short)10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<1> but was:<10>"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<1> but was:<10>"));

  }

  public void test296() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test296");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    junit.framework.TestResult var4 = var1.run();
    int var5 = var1.countTestCases();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>");
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var9.test();
    java.lang.String var12 = var9.toString();
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    junit.framework.TestResult var15 = var13.run();
    junit.framework.TestResult var16 = var13.run();
    var9.run(var16);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var9, (java.lang.Object)(byte)100);
    java.lang.String var20 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", (java.lang.Object)(byte)100);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>> but was:<100>"+ "'", var20.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>> but was:<100>"));

  }

  public void test297() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test297");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    var1.setName(" expected:<10> but was:<10>");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1>", (java.lang.Object)var1, (java.lang.Object)1.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test298() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test298");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", ' ', '#');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test299() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test299");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2);
    junit.framework.TestResult var5 = var2.run();
    var2.test();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var2.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test300() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test300");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (short)0, (short)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test301() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test301");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>> but was:<100>", 100L, 0L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test302() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test302");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", 10.0f, 0.0f, 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test303() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test303");


    java.lang.Object var3 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var3, (java.lang.Object)var4);
    java.lang.String var6 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var4);
    java.lang.String var7 = var4.toString();
    var4.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    junit.framework.TestResult var13 = var11.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var11);
    var11.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var17 = var11.run();
    var4.run(var17);
    com.application.ciadobusao.test.EncontroTeste var19 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var20 = var19.run();
    var19.test();
    junit.framework.TestResult var22 = var19.run();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var26 = var25.run();
    junit.framework.TestResult var27 = var25.run();
    junit.framework.TestResult var28 = var25.run();
    com.application.ciadobusao.test.EncontroTeste var30 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var31 = var30.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var30);
    java.lang.String var33 = var30.toString();
    java.lang.String var34 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var28, (java.lang.Object)var30);
    com.application.ciadobusao.test.EncontroTeste var35 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var36 = var35.run();
    junit.framework.TestResult var37 = var35.run();
    java.lang.String var38 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var28, (java.lang.Object)var37);
    var19.run(var37);
    junit.framework.TestResult var40 = var19.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10>", (java.lang.Object)var17, (java.lang.Object)var19);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var6.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var33.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);

  }

  public void test304() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test304");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", " expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test305() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test305");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (short)10, (short)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test306() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test306");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (short)1, (short)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test307() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test307");


    junit.framework.Assert.assertNotNull((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>");

  }

  public void test308() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test308");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var0.run(var3);
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    var7.test();
    junit.framework.TestResult var10 = var7.run();
    var5.run(var10);
    var0.run(var10);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test309() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test309");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    var1.setName(" expected:<10> but was:<10>");
    junit.framework.TestResult var5 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    var7.test();
    java.lang.String var10 = var7.getName();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var7.run(var12);
    java.lang.String var14 = var7.toString();
    var7.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >");
    java.lang.Object var19 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var19, (java.lang.Object)var20);
    java.lang.String var22 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var20);
    java.lang.String var23 = var20.toString();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var7, (java.lang.Object)var23);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var1, (java.lang.Object)var7);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var22.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var23.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test310() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test310");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (-1.0f), 10.0f, 10.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test311() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test311");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var2);
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var8 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var10 = var9.toString();
    var9.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var13 = var9.countTestCases();
    int var14 = var9.countTestCases();
    int var15 = var9.countTestCases();
    junit.framework.Assert.assertNotSame("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var9);
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var19 = var18.run();
    junit.framework.TestResult var20 = var18.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var18);
    com.application.ciadobusao.test.EncontroTeste var23 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var24 = var23.toString();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var26 = var25.run();
    var23.run(var26);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var26);
    var18.run(var26);
    var18.test();
    com.application.ciadobusao.test.EncontroTeste var32 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var33 = var32.toString();
    com.application.ciadobusao.test.EncontroTeste var34 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var35 = var34.run();
    var32.run(var35);
    com.application.ciadobusao.test.EncontroTeste var37 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var38 = var37.run();
    com.application.ciadobusao.test.EncontroTeste var39 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var40 = var39.run();
    var39.test();
    junit.framework.TestResult var42 = var39.run();
    var37.run(var42);
    var32.run(var42);
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var32);
    var32.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var48 = var32.toString();
    junit.framework.Assert.assertNotSame((java.lang.Object)var18, (java.lang.Object)var32);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)"hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var32);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var33.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)"+ "'", var48.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test312() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test312");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test313() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test313");


    java.lang.Object var2 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var5 = var4.toString();
    var4.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var8 = var4.countTestCases();
    java.lang.String var10 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var4, (java.lang.Object)true);
    java.lang.String var11 = var4.toString();
    java.lang.String var12 = var4.toString();
    junit.framework.TestResult var13 = var4.run();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", var2, (java.lang.Object)var13);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>> but was:<100>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test314() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test314");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", ' ', 'a');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test315() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test315");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test316() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test316");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var3.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    junit.framework.TestResult var7 = var3.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var9 = var8.toString();
    var8.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var12 = var8.countTestCases();
    int var13 = var8.countTestCases();
    java.lang.String var14 = var8.getName();
    java.lang.String var15 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var7, (java.lang.Object)var8);
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var7);
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var19 = var18.run();
    junit.framework.TestResult var20 = var18.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var18);
    var18.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var24 = var18.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var18);
    junit.framework.TestResult var26 = var18.run();
    junit.framework.TestResult var27 = var18.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<1> but was:<10>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var18);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);

  }

  public void test317() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test317");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    int var3 = var2.countTestCases();
    java.lang.String var4 = var2.getName();
    junit.framework.TestResult var5 = var2.run();
    int var6 = var2.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var7.run(var10);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var10);
    int var13 = var2.countTestCases();
    java.lang.Object var14 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var14, (java.lang.Object)var15);
    java.lang.String var17 = var15.toString();
    junit.framework.TestResult var18 = var15.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var2, (java.lang.Object)var18);
    var2.test();
    junit.framework.TestResult var21 = var2.run();
    junit.framework.TestResult var22 = var2.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("", (java.lang.Object)var22, (java.lang.Object)" expected:<10> but was:<10>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test318() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test318");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (-1), 10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test319() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test319");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>> but was:<100>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test320() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test320");


    java.lang.Object var4 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var4, (java.lang.Object)var5);
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var9 = var8.toString();
    var8.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var12 = var8.countTestCases();
    java.lang.String var14 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var8, (java.lang.Object)true);
    java.lang.String var15 = var8.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var5, (java.lang.Object)var15);
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var18 = var17.toString();
    var17.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var21 = var17.countTestCases();
    int var22 = var17.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var15, (java.lang.Object)var17);
    junit.framework.TestResult var24 = var17.run();
    java.lang.String var25 = var17.getName();
    java.lang.String var26 = junit.framework.Assert.format("hi!", (java.lang.Object)"hi!", (java.lang.Object)var17);
    java.lang.String var27 = var17.toString();
    var17.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)10.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var15.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var26.equals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var27.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test321() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test321");


    java.lang.Object var2 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var2, (java.lang.Object)var3);
    java.lang.String var5 = var3.getName();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var3, (java.lang.Object)1);
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    junit.framework.TestResult var13 = var11.run();
    junit.framework.TestResult var14 = var11.run();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var16);
    java.lang.String var19 = var16.toString();
    java.lang.String var20 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var14, (java.lang.Object)var16);
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var22 = var21.run();
    junit.framework.TestResult var23 = var21.run();
    java.lang.String var24 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var14, (java.lang.Object)var23);
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var27 = var26.run();
    junit.framework.TestResult var28 = var26.run();
    junit.framework.TestResult var29 = var26.run();
    java.lang.String var30 = var26.toString();
    com.application.ciadobusao.test.EncontroTeste var32 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var33 = var32.run();
    var32.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var32, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var37 = var32.getName();
    var32.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var26, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", (java.lang.Object)var23, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)1, (java.lang.Object)var23);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var30.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);

  }

  public void test322() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test322");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (-1.0d), 0.0d, 0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test323() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test323");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", 0L, 100L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test324() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test324");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    var0.test();
    junit.framework.TestResult var3 = var0.run();
    java.lang.String var4 = var0.toString();
    java.lang.Object var5 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var5, (java.lang.Object)var6);
    java.lang.String var8 = var6.getName();
    junit.framework.Assert.assertNotNull((java.lang.Object)var6);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var4, (java.lang.Object)var6);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test325() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test325");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>> but was:<100>", "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test326() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test326");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    java.lang.String var2 = var0.toString();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var4 = var3.toString();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    var3.run(var6);
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var10.test();
    junit.framework.TestResult var13 = var10.run();
    var8.run(var13);
    var3.run(var13);
    var0.run(var13);
    com.application.ciadobusao.test.EncontroTeste var19 = new com.application.ciadobusao.test.EncontroTeste();
    int var20 = var19.countTestCases();
    java.lang.String var21 = var19.getName();
    junit.framework.TestResult var22 = var19.run();
    int var23 = var19.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var25 = var24.toString();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var27 = var26.run();
    var24.run(var27);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var19, (java.lang.Object)var27);
    int var30 = var19.countTestCases();
    java.lang.Object var31 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var32 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var31, (java.lang.Object)var32);
    java.lang.String var34 = var32.toString();
    junit.framework.TestResult var35 = var32.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var19, (java.lang.Object)var35);
    junit.framework.Assert.assertNotSame((java.lang.Object)(short)100, (java.lang.Object)var35);
    var0.run(var35);
    junit.framework.TestResult var39 = var0.run();
    java.lang.Object var41 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var42 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var41, (java.lang.Object)var42);
    com.application.ciadobusao.test.EncontroTeste var45 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var46 = var45.toString();
    var45.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var49 = var45.countTestCases();
    java.lang.String var51 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var45, (java.lang.Object)true);
    java.lang.String var52 = var45.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var42, (java.lang.Object)var52);
    var42.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var0, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var34.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var46.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var51.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var52.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test327() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test327");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", true, false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test328() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test328");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var3.test();
    junit.framework.TestResult var6 = var3.run();
    var1.run(var6);
    junit.framework.TestResult var8 = var1.run();
    var1.test();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var11.test();
    junit.framework.TestResult var14 = var11.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var11);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1, (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test329() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test329");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test330() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test330");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    java.lang.String var4 = var1.getName();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    var1.run(var6);
    junit.framework.TestResult var8 = var1.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test331() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test331");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 1.0f, 10.0f, 1.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test332() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test332");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)", 0.0f, 100.0f, 10.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test333() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test333");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.TestResult var5 = var2.run();
    java.lang.String var6 = var2.toString();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var8, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var13 = var8.getName();
    var8.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test334() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test334");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", false, false);

  }

  public void test335() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test335");


    junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", true, true);

  }

  public void test336() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test336");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>", 'a', '#');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test337() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test337");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (byte)0, (byte)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test338() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test338");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1>", " expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test339() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test339");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>", 10.0f, (-1.0f), 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test340() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test340");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.TestResult var4 = var1.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var1);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    junit.framework.TestResult var8 = var6.run();
    junit.framework.TestResult var9 = var6.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var1, (java.lang.Object)var6);
    junit.framework.TestResult var11 = var1.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var1, (java.lang.Object)10.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test341() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test341");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>", 10.0f, 10.0f, 1.0f);

  }

  public void test342() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test342");


    junit.framework.Assert.assertTrue("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", true);

  }

  public void test343() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test343");


    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var5 = var4.toString();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    var4.run(var7);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var7);
    junit.framework.Assert.assertNotNull((java.lang.Object)var7);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var7);
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var14 = var13.toString();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var16 = var15.run();
    var13.run(var16);
    junit.framework.Assert.assertNotSame("", (java.lang.Object)var16, (java.lang.Object)100.0f);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test344() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test344");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    var0.run(var5);
    java.lang.String var7 = var0.getName();
    junit.framework.Assert.assertNotNull((java.lang.Object)var0);
    java.lang.String var9 = var0.toString();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var10.test();
    java.lang.String var13 = var10.toString();
    java.lang.String var14 = var10.getName();
    var10.test();
    var10.setName("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var0, (java.lang.Object)"");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test345() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test345");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100L, 0L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test346() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test346");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test347() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test347");


    junit.framework.Assert.assertEquals(0.0d, (-1.0d), 100.0d);

  }

  public void test348() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test348");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    int var4 = var3.countTestCases();
    java.lang.String var5 = var3.getName();
    junit.framework.TestResult var6 = var3.run();
    int var7 = var3.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var9 = var8.toString();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var8.run(var11);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var3, (java.lang.Object)var11);
    int var14 = var3.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotNull((java.lang.Object)var15);
    java.lang.String var17 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var3, (java.lang.Object)var15);
    junit.framework.TestResult var18 = var15.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)(byte)(-1), (java.lang.Object)var18);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test349() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test349");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var5 = var1.countTestCases();
    java.lang.String var7 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var1, (java.lang.Object)true);
    java.lang.String var8 = var1.toString();
    java.lang.String var9 = var1.toString();
    junit.framework.TestResult var10 = var1.run();
    java.lang.Object var11 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var11, (java.lang.Object)var12);
    java.lang.String var14 = var12.toString();
    junit.framework.TestResult var15 = var12.run();
    var1.run(var15);
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var19 = var18.run();
    junit.framework.TestResult var20 = var18.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var18);
    var18.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var24 = var18.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var18);
    java.lang.String var26 = var18.getName();
    junit.framework.Assert.assertNotSame((java.lang.Object)var1, (java.lang.Object)var18);
    com.application.ciadobusao.test.EncontroTeste var29 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var30 = var29.toString();
    var29.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var33 = var29.countTestCases();
    java.lang.String var35 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var29, (java.lang.Object)true);
    java.lang.String var36 = var29.toString();
    java.lang.String var37 = var29.toString();
    junit.framework.TestResult var38 = var29.run();
    java.lang.Object var39 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var40 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var39, (java.lang.Object)var40);
    java.lang.String var42 = var40.toString();
    junit.framework.TestResult var43 = var40.run();
    var29.run(var43);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var1, (java.lang.Object)var29);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var30.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var35.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var36.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var37.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var42.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);

  }

  public void test350() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test350");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    var0.setName(" expected:<10> but was:<10>");
    junit.framework.TestResult var4 = var0.run();
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
    var0.test();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test351() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test351");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(" expected:<10> but was:<10>", (-1.0d), 100.0d, 10.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test352() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test352");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    int var2 = var1.countTestCases();
    java.lang.String var3 = var1.getName();
    junit.framework.TestResult var4 = var1.run();
    int var5 = var1.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var7 = var6.toString();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var6.run(var9);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var1, (java.lang.Object)var9);
    int var12 = var1.countTestCases();
    java.lang.Object var13 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var13, (java.lang.Object)var14);
    java.lang.String var16 = var14.toString();
    junit.framework.TestResult var17 = var14.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var1, (java.lang.Object)var17);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test353() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test353");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    junit.framework.TestResult var4 = var0.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    junit.framework.TestResult var9 = var7.run();
    junit.framework.TestResult var10 = var7.run();
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var12);
    java.lang.String var15 = var12.toString();
    java.lang.String var16 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var10, (java.lang.Object)var12);
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var18 = var17.run();
    junit.framework.TestResult var19 = var17.run();
    java.lang.String var20 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var10, (java.lang.Object)var19);
    var0.run(var10);
    java.lang.String var22 = var0.getName();
    java.lang.String var23 = var0.toString();
    junit.framework.Assert.assertNotNull((java.lang.Object)var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var15.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var23.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test354() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test354");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 0.0d, 0.0d, 100.0d);

  }

  public void test355() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test355");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", "hi! expected:<100> but was:<10> expected:<hi! expected:<100> but was:<10>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test356() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test356");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10>", false, true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test357() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test357");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var3.test();
    junit.framework.TestResult var6 = var3.run();
    var1.run(var6);
    junit.framework.TestResult var8 = var1.run();
    java.lang.String var9 = var1.getName();
    var1.setName("hi!");
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var14 = var13.toString();
    var13.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var17 = var13.countTestCases();
    java.lang.String var19 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var13, (java.lang.Object)true);
    java.lang.String var20 = var13.toString();
    java.lang.String var21 = var13.toString();
    java.lang.String var22 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var1, (java.lang.Object)var13);
    var1.setName("hi! expected:<100> but was:<10>");
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var27 = var26.run();
    var26.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    junit.framework.TestResult var30 = var26.run();
    com.application.ciadobusao.test.EncontroTeste var31 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var32 = var31.toString();
    var31.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var35 = var31.countTestCases();
    int var36 = var31.countTestCases();
    java.lang.String var37 = var31.getName();
    java.lang.String var38 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var30, (java.lang.Object)var31);
    com.application.ciadobusao.test.EncontroTeste var40 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var41 = var40.run();
    var40.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var40, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var45 = var40.getName();
    var40.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var48 = var40.run();
    var31.run(var48);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)"hi! expected:<100> but was:<10>", (java.lang.Object)var48);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var20.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var21.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var32.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var37.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);

  }

  public void test358() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test358");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    junit.framework.TestResult var4 = var1.run();
    int var5 = var1.countTestCases();
    int var6 = var1.countTestCases();
    junit.framework.TestResult var7 = var1.run();
    java.lang.Object var8 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var8, (java.lang.Object)var9);
    junit.framework.TestResult var11 = var9.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var7, (java.lang.Object)var11);
    java.lang.Object var16 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var16, (java.lang.Object)var17);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)(short)(-1), var16);
    java.lang.Object var22 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var23 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var22, (java.lang.Object)var23);
    java.lang.String var25 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var23);
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", var16, (java.lang.Object)var26);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var7, (java.lang.Object)var27);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var25.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test359() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test359");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var5 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var7);
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var10.test();
    java.lang.String var13 = var10.getName();
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var15 = var14.run();
    var10.run(var15);
    var7.run(var15);
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var19 = var18.run();
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    var20.test();
    junit.framework.TestResult var23 = var20.run();
    var18.run(var23);
    var7.run(var23);
    java.lang.Object var26 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var26, (java.lang.Object)var27);
    junit.framework.TestResult var29 = var27.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var23, (java.lang.Object)var29);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var5, (java.lang.Object)var23);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);

  }

  public void test360() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test360");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", " expected:<10> but was:<10>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test361() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test361");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", "hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", "hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test362() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test362");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<hi! expected:<100> but was:<10>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 100.0d, 10.0d, 0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test363() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test363");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (byte)100, (byte)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test364() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test364");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<hi! expected:<100> but was:<10>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (-1.0d), 10.0d, (-1.0d));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test365() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test365");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var5);
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    junit.framework.TestResult var10 = var8.run();
    junit.framework.TestResult var11 = var8.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var8);
    java.lang.String var13 = var8.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1>", (java.lang.Object)"hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var13);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test366() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test366");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (byte)1, (byte)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test367() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test367");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var3.test();
    junit.framework.TestResult var6 = var3.run();
    int var7 = var3.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)0L, (java.lang.Object)var3);
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var11 = var10.toString();
    var10.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var14 = var10.countTestCases();
    java.lang.String var16 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var10, (java.lang.Object)true);
    java.lang.String var17 = var10.toString();
    java.lang.String var18 = var10.toString();
    junit.framework.TestResult var19 = var10.run();
    var3.run(var19);
    java.lang.Object var21 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var21, (java.lang.Object)var22);
    java.lang.String var24 = var22.toString();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    int var26 = var25.countTestCases();
    java.lang.String var27 = var25.getName();
    junit.framework.TestResult var28 = var25.run();
    var22.run(var28);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var19, (java.lang.Object)var22);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);

  }

  public void test368() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test368");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", 0L, 10L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test369() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test369");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var1.run(var4);
    junit.framework.Assert.assertNotSame("", (java.lang.Object)var4, (java.lang.Object)100.0f);
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    junit.framework.TestResult var11 = var9.run();
    junit.framework.TestResult var12 = var9.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var9);
    java.lang.String var14 = var9.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)100.0f, (java.lang.Object)var14);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test370() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test370");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>", 0, 10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test371() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test371");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 1.0f, 10.0f, 1.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test372() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test372");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    var0.run(var5);
    junit.framework.TestResult var7 = var0.run();
    java.lang.String var8 = var0.getName();
    var0.test();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test373() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test373");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test374() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test374");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test375() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test375");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    java.lang.String var5 = var2.toString();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    junit.framework.TestResult var8 = var6.run();
    junit.framework.TestResult var9 = var6.run();
    var2.run(var9);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var2, (java.lang.Object)(byte)100);
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var15 = var14.run();
    var14.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var14, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var19 = var14.getName();
    junit.framework.TestResult var20 = var14.run();
    com.application.ciadobusao.test.EncontroTeste var23 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var24 = var23.run();
    junit.framework.TestResult var25 = var23.run();
    junit.framework.TestResult var26 = var23.run();
    com.application.ciadobusao.test.EncontroTeste var28 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var29 = var28.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var28);
    java.lang.String var31 = var28.toString();
    java.lang.String var32 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var26, (java.lang.Object)var28);
    com.application.ciadobusao.test.EncontroTeste var33 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var34 = var33.run();
    junit.framework.TestResult var35 = var33.run();
    java.lang.String var36 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var26, (java.lang.Object)var35);
    java.lang.Object var37 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var38 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var37, (java.lang.Object)var38);
    junit.framework.TestResult var40 = var38.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var35, (java.lang.Object)var38);
    var14.run(var35);
    junit.framework.TestResult var43 = var14.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)(byte)100, (java.lang.Object)var14);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var31.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);

  }

  public void test376() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test376");


    junit.framework.Assert.assertFalse("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", false);

  }

  public void test377() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test377");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    junit.framework.TestResult var3 = var1.run();
    java.lang.String var4 = var1.getName();
    int var5 = var1.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    var6.test();
    junit.framework.TestResult var9 = var6.run();
    int var10 = var6.countTestCases();
    var6.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>");
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var15 = var14.run();
    junit.framework.TestResult var16 = var14.run();
    junit.framework.TestResult var17 = var14.run();
    java.lang.Object var20 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var20, (java.lang.Object)var21);
    java.lang.String var23 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var21);
    java.lang.String var24 = var21.getName();
    junit.framework.Assert.assertNotSame("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var17, (java.lang.Object)var21);
    var6.run(var17);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1, (java.lang.Object)var6);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var23.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);

  }

  public void test378() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test378");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", ' ', ' ');

  }

  public void test379() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test379");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    var0.test();
    java.lang.Object var5 = new java.lang.Object();
    junit.framework.Assert.assertNotSame("hi! expected:<100> but was:<10>", (java.lang.Object)1.0d, var5);
    junit.framework.Assert.assertNotNull(var5);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var0, var5);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);

  }

  public void test380() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test380");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", 0.0d, 10.0d, 1.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test381() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test381");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var2);
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var8 = var2.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var2);
    java.lang.String var10 = var2.getName();
    junit.framework.Assert.assertNotNull((java.lang.Object)var2);
    var2.setName("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>");
    java.lang.Object var15 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var15, (java.lang.Object)var16);
    java.lang.String var18 = var16.toString();
    var16.setName("hi!");
    junit.framework.TestResult var21 = var16.run();
    java.lang.Object var22 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var23 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var22, (java.lang.Object)var23);
    java.lang.String var25 = var23.toString();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    int var27 = var26.countTestCases();
    java.lang.String var28 = var26.getName();
    junit.framework.TestResult var29 = var26.run();
    var23.run(var29);
    var23.setName("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>");
    var23.test();
    java.lang.String var34 = junit.framework.Assert.format("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var16, (java.lang.Object)var23);
    java.lang.String var35 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var23);
    com.application.ciadobusao.test.EncontroTeste var36 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var37 = var36.run();
    var36.test();
    java.lang.String var39 = var36.toString();
    java.lang.String var40 = var36.getName();
    var36.test();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var35, (java.lang.Object)var36);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var34.equals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var35.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var39.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);

  }

  public void test382() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test382");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((-1.0d), 100.0d, 1.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test383() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test383");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", 1L, 100L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test384() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test384");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<1> but was:<10>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test385() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test385");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test386() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test386");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>", false, true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test387() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test387");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var7 = var2.getName();
    junit.framework.TestResult var8 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    junit.framework.TestResult var13 = var11.run();
    junit.framework.TestResult var14 = var11.run();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var16);
    java.lang.String var19 = var16.toString();
    java.lang.String var20 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var14, (java.lang.Object)var16);
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var22 = var21.run();
    junit.framework.TestResult var23 = var21.run();
    java.lang.String var24 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var14, (java.lang.Object)var23);
    java.lang.Object var25 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var25, (java.lang.Object)var26);
    junit.framework.TestResult var28 = var26.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var23, (java.lang.Object)var26);
    var2.run(var23);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)1.0f, (java.lang.Object)var23);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);

  }

  public void test388() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test388");


    junit.framework.Assert.assertEquals(0.0d, 100.0d, 100.0d);

  }

  public void test389() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test389");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test390() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test390");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<100> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>>", 1.0f, (-1.0f), 1.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test391() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test391");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", 0L, 10L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test392() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test392");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 100.0f, (-1.0f), 100.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test393() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test393");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    java.lang.String var4 = var1.getName();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    var1.run(var6);
    java.lang.String var8 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >");
    var1.setName("");
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    int var15 = var14.countTestCases();
    java.lang.String var16 = var14.getName();
    junit.framework.TestResult var17 = var14.run();
    int var18 = var14.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var19 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var20 = var19.toString();
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var22 = var21.run();
    var19.run(var22);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var14, (java.lang.Object)var22);
    int var25 = var14.countTestCases();
    java.lang.Object var26 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var26, (java.lang.Object)var27);
    java.lang.String var29 = var27.toString();
    junit.framework.TestResult var30 = var27.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var14, (java.lang.Object)var30);
    var14.test();
    junit.framework.TestResult var33 = var14.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var14);
    int var35 = var14.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1>", (java.lang.Object)"", (java.lang.Object)var35);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var20.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var29.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);

  }

  public void test394() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test394");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<100>", 'a', 'a');

  }

  public void test395() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test395");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var0.run(var3);
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    var7.test();
    junit.framework.TestResult var10 = var7.run();
    var5.run(var10);
    var0.run(var10);
    var0.test();
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
    java.lang.Object var16 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var16, (java.lang.Object)var17);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var0, var16);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test396() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test396");


    junit.framework.Assert.assertEquals((-1.0f), (-1.0f), 1.0f);

  }

  public void test397() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test397");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste)", 100L, 1L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test398() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test398");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<100>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test399() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test399");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    var0.test();
    junit.framework.Assert.assertNotNull((java.lang.Object)var0);
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)");
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var8.test();
    junit.framework.TestResult var11 = var8.run();
    java.lang.String var12 = var8.toString();
    java.lang.String var13 = var8.toString();
    java.lang.String var14 = var8.getName();
    int var15 = var8.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var15);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);

  }

  public void test400() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test400");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    junit.framework.TestResult var4 = var0.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    junit.framework.TestResult var9 = var7.run();
    junit.framework.TestResult var10 = var7.run();
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var12);
    java.lang.String var15 = var12.toString();
    java.lang.String var16 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var10, (java.lang.Object)var12);
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var18 = var17.run();
    junit.framework.TestResult var19 = var17.run();
    java.lang.String var20 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var10, (java.lang.Object)var19);
    var0.run(var10);
    java.lang.String var22 = var0.getName();
    java.lang.String var23 = var0.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var15.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var22.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var23.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test401() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test401");


    java.lang.Object var3 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var3, (java.lang.Object)var4);
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    var7.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var11 = var7.countTestCases();
    java.lang.String var13 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var7, (java.lang.Object)true);
    java.lang.String var14 = var7.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var4, (java.lang.Object)var14);
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var17 = var16.toString();
    var16.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var20 = var16.countTestCases();
    int var21 = var16.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var14, (java.lang.Object)var16);
    junit.framework.TestResult var23 = var16.run();
    var16.test();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var26 = var25.toString();
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var28 = var27.run();
    var25.run(var28);
    var25.test();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var16, (java.lang.Object)var25);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);

  }

  public void test402() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test402");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.TestResult var4 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var6);
    java.lang.String var9 = var6.toString();
    java.lang.String var10 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var4, (java.lang.Object)var6);
    junit.framework.Assert.assertNotNull((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test403() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test403");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var3.test();
    junit.framework.TestResult var6 = var3.run();
    var1.run(var6);
    junit.framework.TestResult var8 = var1.run();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>");
    java.lang.Object var15 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var15, (java.lang.Object)var16);
    com.application.ciadobusao.test.EncontroTeste var19 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var20 = var19.toString();
    var19.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var23 = var19.countTestCases();
    java.lang.String var25 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var19, (java.lang.Object)true);
    java.lang.String var26 = var19.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var16, (java.lang.Object)var26);
    com.application.ciadobusao.test.EncontroTeste var28 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var29 = var28.toString();
    var28.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var32 = var28.countTestCases();
    int var33 = var28.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var26, (java.lang.Object)var28);
    junit.framework.TestResult var35 = var28.run();
    java.lang.String var36 = var28.getName();
    java.lang.String var37 = junit.framework.Assert.format("hi!", (java.lang.Object)"hi!", (java.lang.Object)var28);
    var28.test();
    com.application.ciadobusao.test.EncontroTeste var39 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var40 = var39.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var40);
    var28.run(var40);
    var1.run(var40);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var40);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var20.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var29.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var36.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var37.equals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);

  }

  public void test404() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test404");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", 1.0f, (-1.0f), 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test405() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test405");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((-1.0f), 0.0f, (-1.0f));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test406() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test406");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", 0.0d, 0.0d, 10.0d);

  }

  public void test407() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test407");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test408() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test408");


    junit.framework.Assert.assertNotNull((java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)");

  }

  public void test409() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test409");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var7 = var2.getName();
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var10.test();
    java.lang.String var13 = var10.getName();
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var15 = var14.run();
    var10.run(var15);
    junit.framework.TestResult var17 = var10.run();
    var2.run(var17);
    com.application.ciadobusao.test.EncontroTeste var19 = new com.application.ciadobusao.test.EncontroTeste();
    int var20 = var19.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2, (java.lang.Object)var20);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);

  }

  public void test410() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test410");


    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    junit.framework.TestResult var7 = var5.run();
    junit.framework.TestResult var8 = var5.run();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var10);
    java.lang.String var13 = var10.toString();
    java.lang.String var14 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var8, (java.lang.Object)var10);
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var16 = var15.run();
    junit.framework.TestResult var17 = var15.run();
    java.lang.String var18 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var8, (java.lang.Object)var17);
    java.lang.Object var19 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var19, (java.lang.Object)var20);
    junit.framework.TestResult var22 = var20.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var17, (java.lang.Object)var20);
    junit.framework.Assert.assertNotNull("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var17);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)false, (java.lang.Object)"hi!(com.application.ciadobusao.test.EncontroTeste)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test411() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test411");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<1> but was:<10>", 10, (-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test412() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test412");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test413() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test413");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>> but was:<100>", (byte)100, (byte)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test414() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test414");


    junit.framework.Assert.assertNotNull((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");

  }

  public void test415() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test415");


    java.lang.Object var3 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var3, (java.lang.Object)var4);
    java.lang.String var6 = var4.getName();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var4, (java.lang.Object)1);
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var11 = var10.toString();
    var10.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var14 = var10.countTestCases();
    java.lang.String var16 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var10, (java.lang.Object)true);
    java.lang.String var17 = var10.toString();
    int var18 = var10.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var19 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var20 = var19.run();
    junit.framework.TestResult var21 = var19.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var10, (java.lang.Object)var21);
    java.lang.String var23 = junit.framework.Assert.format("hi! expected:<100> but was:<10>", (java.lang.Object)1, (java.lang.Object)var21);
    com.application.ciadobusao.test.EncontroTeste var24 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var25 = var24.toString();
    var24.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var28 = var24.countTestCases();
    junit.framework.TestResult var29 = var24.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<100> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>>", (java.lang.Object)1, (java.lang.Object)var29);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);

  }

  public void test416() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test416");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var5 = var1.countTestCases();
    java.lang.String var7 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var1, (java.lang.Object)true);
    java.lang.String var8 = var1.toString();
    java.lang.String var9 = var1.toString();
    junit.framework.Assert.assertNotNull((java.lang.Object)var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test417() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test417");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0> expected:<1> but was:<1>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test418() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test418");


    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);

  }

  public void test419() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test419");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", 0, 10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test420() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test420");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", '4', 'a');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test421() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test421");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var1 = var0.toString();
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var4 = var0.countTestCases();
    int var5 = var0.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    var6.test();
    junit.framework.Assert.assertNotNull((java.lang.Object)var6);
    junit.framework.Assert.assertNotSame((java.lang.Object)var5, (java.lang.Object)var6);
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    var13.test();
    junit.framework.TestResult var16 = var13.run();
    var11.run(var16);
    junit.framework.TestResult var18 = var11.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var5, (java.lang.Object)var18);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var1.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test422() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test422");


    junit.framework.Assert.assertTrue("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", true);

  }

  public void test423() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test423");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    var0.run(var5);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test424() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test424");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var3);
    junit.framework.TestResult var6 = var3.run();
    var3.test();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var3);
    var3.test();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    junit.framework.TestResult var13 = var11.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var11);
    var11.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var17 = var11.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var11);
    junit.framework.TestResult var19 = var11.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var3, (java.lang.Object)var11);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);

  }

  public void test425() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test425");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(10.0d, 100.0d, 1.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test426() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test426");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    var0.test();
    junit.framework.Assert.assertNotNull((java.lang.Object)var0);
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)");
    var0.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var8 = var0.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var13 = var12.toString();
    var12.setName(" expected:<10> but was:<10>");
    junit.framework.TestResult var16 = var12.run();
    java.lang.String var17 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)(byte)10, (java.lang.Object)var12);
    java.lang.String var18 = var12.getName();
    junit.framework.Assert.assertNotSame((java.lang.Object)0.0d, (java.lang.Object)var12);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var8, (java.lang.Object)var12);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + " expected:<10> but was:<10>"+ "'", var18.equals(" expected:<10> but was:<10>"));

  }

  public void test427() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test427");


    junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10>", 100L, 100L);

  }

  public void test428() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test428");


    java.lang.Object var2 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var2, (java.lang.Object)var3);
    java.lang.String var5 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var3);
    java.lang.Object var6 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var6, (java.lang.Object)var7);
    java.lang.String var9 = var7.toString();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    int var11 = var10.countTestCases();
    java.lang.String var12 = var10.getName();
    junit.framework.TestResult var13 = var10.run();
    var7.run(var13);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)"hi!", (java.lang.Object)var7);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var5.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test429() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test429");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", '4', ' ');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test430() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test430");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>", (byte)0, (byte)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test431() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test431");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test432() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test432");


    junit.framework.Assert.assertEquals(10.0d, 1.0d, 100.0d);

  }

  public void test433() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test433");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var2);
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var8 = var2.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var2);
    java.lang.String var10 = var2.getName();
    junit.framework.Assert.assertNotNull((java.lang.Object)var2);
    var2.setName("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>");
    java.lang.Object var15 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var15, (java.lang.Object)var16);
    java.lang.String var18 = var16.toString();
    var16.setName("hi!");
    junit.framework.TestResult var21 = var16.run();
    java.lang.Object var22 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var23 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var22, (java.lang.Object)var23);
    java.lang.String var25 = var23.toString();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    int var27 = var26.countTestCases();
    java.lang.String var28 = var26.getName();
    junit.framework.TestResult var29 = var26.run();
    var23.run(var29);
    var23.setName("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>");
    var23.test();
    java.lang.String var34 = junit.framework.Assert.format("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var16, (java.lang.Object)var23);
    java.lang.String var35 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var23);
    java.lang.Object var40 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var41 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var40, (java.lang.Object)var41);
    com.application.ciadobusao.test.EncontroTeste var44 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var45 = var44.toString();
    var44.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var48 = var44.countTestCases();
    java.lang.String var50 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var44, (java.lang.Object)true);
    java.lang.String var51 = var44.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var41, (java.lang.Object)var51);
    com.application.ciadobusao.test.EncontroTeste var53 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var54 = var53.toString();
    var53.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var57 = var53.countTestCases();
    int var58 = var53.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var51, (java.lang.Object)var53);
    junit.framework.TestResult var60 = var53.run();
    java.lang.String var61 = var53.getName();
    java.lang.String var62 = junit.framework.Assert.format("hi!", (java.lang.Object)"hi!", (java.lang.Object)var53);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var23, (java.lang.Object)"hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var34.equals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var35.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var45.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var50.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var51.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var54.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var61.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var62.equals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));

  }

  public void test434() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test434");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    java.lang.String var4 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    junit.framework.TestResult var7 = var5.run();
    junit.framework.TestResult var8 = var5.run();
    var1.run(var8);
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var11 = var10.toString();
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    var10.run(var13);
    var1.run(var13);
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var19 = var18.toString();
    var18.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var22 = var18.countTestCases();
    java.lang.String var24 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var18, (java.lang.Object)true);
    java.lang.String var25 = var18.toString();
    java.lang.String var26 = var18.toString();
    junit.framework.TestResult var27 = var18.run();
    java.lang.Object var28 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var29 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var28, (java.lang.Object)var29);
    java.lang.String var31 = var29.toString();
    junit.framework.TestResult var32 = var29.run();
    var18.run(var32);
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var32);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1, (java.lang.Object)var32);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var31.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);

  }

  public void test435() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test435");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >>", 0L, 100L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test436() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test436");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.toString();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var5 = var4.toString();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    var4.run(var7);
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var11.test();
    junit.framework.TestResult var14 = var11.run();
    var9.run(var14);
    var4.run(var14);
    var4.test();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var0, (java.lang.Object)var4);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var3.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test437() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test437");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 'a', '#');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test438() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test438");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    java.lang.String var4 = var1.getName();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    var1.run(var6);
    java.lang.String var8 = var1.toString();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >");
    var1.setName("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>", (java.lang.Object)var1, (java.lang.Object)'a');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test439() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test439");


    java.lang.Object var0 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var0, (java.lang.Object)var1);
    java.lang.String var3 = var1.toString();
    java.lang.String var4 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var7 = var6.toString();
    var6.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var10 = var6.countTestCases();
    java.lang.String var12 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var6, (java.lang.Object)true);
    java.lang.String var13 = var6.toString();
    int var14 = var6.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var16 = var15.run();
    junit.framework.TestResult var17 = var15.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var6, (java.lang.Object)var17);
    java.lang.String var19 = var6.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var1, (java.lang.Object)var6);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var3.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test440() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test440");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((-1.0f), 10.0f, (-1.0f));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test441() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test441");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", 1L, 0L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test442() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test442");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    java.lang.String var5 = var2.getName();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var7 = var6.run();
    var2.run(var7);
    junit.framework.Assert.assertNotSame("hi!", (java.lang.Object)var2, (java.lang.Object)"hi!");
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    junit.framework.TestResult var14 = var12.run();
    junit.framework.TestResult var15 = var12.run();
    java.lang.String var16 = var12.toString();
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var19 = var18.run();
    var18.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var18, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var23 = var18.getName();
    var18.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var12, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)"hi!", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);

  }

  public void test443() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test443");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (byte)(-1), (byte)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test444() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test444");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    junit.framework.TestResult var5 = var3.run();
    junit.framework.TestResult var6 = var3.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var8);
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var6, (java.lang.Object)var8);
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    junit.framework.TestResult var15 = var13.run();
    java.lang.String var16 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var6, (java.lang.Object)var15);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<100> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)(byte)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);

  }

  public void test445() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test445");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100.0d, 10.0d, 0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test446() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test446");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)100, (byte)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test447() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test447");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(1.0d, 100.0d, (-1.0d));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test448() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test448");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<hi! expected:<100> but was:<10>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (byte)100, (byte)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test449() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test449");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    junit.framework.TestResult var10 = var8.run();
    junit.framework.TestResult var11 = var8.run();
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var13);
    java.lang.String var16 = var13.toString();
    java.lang.String var17 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var11, (java.lang.Object)var13);
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var19 = var18.run();
    junit.framework.TestResult var20 = var18.run();
    java.lang.String var21 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var11, (java.lang.Object)var20);
    var2.run(var20);
    var2.test();
    java.lang.String var24 = var2.getName();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var26 = var25.toString();
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var28 = var27.run();
    var25.run(var28);
    var25.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)var25);
    int var32 = var2.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var33 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var34 = var33.run();
    java.lang.String var35 = var33.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var32, (java.lang.Object)var35);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var35.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test450() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test450");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    junit.framework.TestResult var3 = var1.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var1);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var7 = var6.toString();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var9 = var8.run();
    var6.run(var9);
    junit.framework.Assert.assertNotNull("hi! expected:<100> but was:<10>", (java.lang.Object)var9);
    var1.run(var9);
    var1.test();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var16 = var15.toString();
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var18 = var17.run();
    var15.run(var18);
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var23 = var22.run();
    var22.test();
    junit.framework.TestResult var25 = var22.run();
    var20.run(var25);
    var15.run(var25);
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var15);
    var15.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var31 = var15.toString();
    junit.framework.Assert.assertNotSame((java.lang.Object)var1, (java.lang.Object)var15);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var15.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)"+ "'", var31.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test451() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test451");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test452() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test452");


    junit.framework.Assert.assertFalse("hi! expected:<100> but was:<10> expected:<hi! expected:<100> but was:<10>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", false);

  }

  public void test453() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test453");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("", '4', '#');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test454() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test454");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var2, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var7 = var2.getName();
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test455() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test455");


    junit.framework.Assert.assertEquals(100.0d, 100.0d, (-1.0d));

  }

  public void test456() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test456");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 10L, (-1L));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test457() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test457");


    junit.framework.Assert.assertEquals(" expected:<10> but was:<10>", 0.0d, 10.0d, 10.0d);

  }

  public void test458() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test458");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2);
    java.lang.String var5 = var2.toString();
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var8 = var2.toString();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var10.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var10, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var15 = var10.getName();
    var10.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    int var18 = var10.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var8, (java.lang.Object)var10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);

  }

  public void test459() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test459");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    var0.test();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    int var4 = var3.countTestCases();
    java.lang.String var5 = var3.getName();
    int var6 = var3.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var0, (java.lang.Object)var6);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);

  }

  public void test460() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test460");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 'a', '#');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test461() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test461");


    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var5 = var4.run();
    var4.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var4, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var9 = var4.getName();
    var4.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var12 = var4.run();
    var4.test();
    junit.framework.Assert.assertNotNull(" expected:<10> but was:<10>", (java.lang.Object)var4);
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var4);
    var4.test();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var4, (java.lang.Object)(byte)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test462() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test462");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertFalse("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<100>", true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test463() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test463");


    java.lang.Object var3 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var3, (java.lang.Object)var4);
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var8 = var7.toString();
    var7.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var11 = var7.countTestCases();
    java.lang.String var13 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var7, (java.lang.Object)true);
    java.lang.String var14 = var7.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var4, (java.lang.Object)var14);
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var17 = var16.toString();
    var16.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var20 = var16.countTestCases();
    int var21 = var16.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var14, (java.lang.Object)var16);
    junit.framework.TestResult var23 = var16.run();
    var16.test();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var26 = var25.run();
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var28 = var27.run();
    var27.test();
    junit.framework.TestResult var30 = var27.run();
    var25.run(var30);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:<100> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>>", (java.lang.Object)var16, (java.lang.Object)var30);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var17.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);

  }

  public void test464() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test464");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1>", false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test465() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test465");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    java.lang.String var4 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var6 = var5.run();
    junit.framework.TestResult var7 = var5.run();
    junit.framework.TestResult var8 = var5.run();
    var1.run(var8);
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    java.lang.Object var11 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var11, (java.lang.Object)var12);
    java.lang.String var14 = var12.toString();
    junit.framework.TestResult var15 = var12.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1, (java.lang.Object)var12);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);

  }

  public void test466() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test466");


    java.lang.Object var2 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var2, (java.lang.Object)var3);
    java.lang.String var5 = var3.toString();
    java.lang.String var6 = var3.toString();
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var3);
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    junit.framework.TestResult var13 = var11.run();
    junit.framework.TestResult var14 = var11.run();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var16);
    java.lang.String var19 = var16.toString();
    java.lang.String var20 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var14, (java.lang.Object)var16);
    com.application.ciadobusao.test.EncontroTeste var21 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var22 = var21.run();
    junit.framework.TestResult var23 = var21.run();
    java.lang.String var24 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var14, (java.lang.Object)var23);
    java.lang.Object var25 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var25, (java.lang.Object)var26);
    junit.framework.TestResult var28 = var26.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var23, (java.lang.Object)var26);
    junit.framework.Assert.assertNotNull("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var23);
    var3.run(var23);
    com.application.ciadobusao.test.EncontroTeste var33 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var34 = var33.toString();
    var33.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var37 = var33.countTestCases();
    java.lang.String var39 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var33, (java.lang.Object)true);
    java.lang.String var40 = var33.toString();
    java.lang.String var41 = var33.toString();
    junit.framework.TestResult var42 = var33.run();
    java.lang.Object var43 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var44 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var43, (java.lang.Object)var44);
    java.lang.String var46 = var44.toString();
    junit.framework.TestResult var47 = var44.run();
    var33.run(var47);
    int var49 = var33.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi!(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var3, (java.lang.Object)var49);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var5.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var34.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var39.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var40.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var41.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var46.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);

  }

  public void test467() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test467");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    int var4 = var3.countTestCases();
    java.lang.String var5 = var3.getName();
    junit.framework.TestResult var6 = var3.run();
    int var7 = var3.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var9 = var8.toString();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var8.run(var11);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var3, (java.lang.Object)var11);
    int var14 = var3.countTestCases();
    java.lang.Object var15 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var15, (java.lang.Object)var16);
    java.lang.String var18 = var16.toString();
    junit.framework.TestResult var19 = var16.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var3, (java.lang.Object)var19);
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var23 = var22.run();
    junit.framework.TestResult var24 = var22.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var22);
    var22.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var28 = var22.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var22);
    com.application.ciadobusao.test.EncontroTeste var31 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var32 = var31.run();
    var31.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var31, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var36 = var31.getName();
    junit.framework.TestResult var37 = var31.run();
    com.application.ciadobusao.test.EncontroTeste var40 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var41 = var40.run();
    junit.framework.TestResult var42 = var40.run();
    junit.framework.TestResult var43 = var40.run();
    com.application.ciadobusao.test.EncontroTeste var45 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var46 = var45.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var45);
    java.lang.String var48 = var45.toString();
    java.lang.String var49 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var43, (java.lang.Object)var45);
    com.application.ciadobusao.test.EncontroTeste var50 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var51 = var50.run();
    junit.framework.TestResult var52 = var50.run();
    java.lang.String var53 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var43, (java.lang.Object)var52);
    java.lang.Object var54 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var55 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var54, (java.lang.Object)var55);
    junit.framework.TestResult var57 = var55.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var52, (java.lang.Object)var55);
    var31.run(var52);
    var22.run(var52);
    var3.run(var52);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var52);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var48.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);

  }

  public void test468() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test468");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (short)10, (short)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test469() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test469");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10>", 100.0d, 1.0d, 10.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test470() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test470");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (byte)100, (byte)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test471() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test471");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("", (short)100, (short)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test472() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test472");


    java.lang.Object var1 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var1, (java.lang.Object)var2);
    java.lang.String var4 = var2.toString();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    int var6 = var5.countTestCases();
    java.lang.String var7 = var5.getName();
    junit.framework.TestResult var8 = var5.run();
    var2.run(var8);
    var2.setName("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>");
    java.lang.Object var14 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var14, (java.lang.Object)var15);
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var19 = var18.toString();
    var18.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var22 = var18.countTestCases();
    java.lang.String var24 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var18, (java.lang.Object)true);
    java.lang.String var25 = var18.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var15, (java.lang.Object)var25);
    com.application.ciadobusao.test.EncontroTeste var27 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var28 = var27.toString();
    var27.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var31 = var27.countTestCases();
    int var32 = var27.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var25, (java.lang.Object)var27);
    junit.framework.TestResult var34 = var27.run();
    com.application.ciadobusao.test.EncontroTeste var37 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var38 = var37.toString();
    junit.framework.TestResult var39 = var37.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var39);
    com.application.ciadobusao.test.EncontroTeste var42 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var43 = var42.run();
    var42.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var42, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var47 = var42.getName();
    var42.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var50 = var42.run();
    junit.framework.TestResult var51 = var42.run();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)"hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var42);
    junit.framework.Assert.assertNotSame((java.lang.Object)var27, (java.lang.Object)var42);
    com.application.ciadobusao.test.EncontroTeste var56 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var57 = var56.run();
    junit.framework.TestResult var58 = var56.run();
    junit.framework.TestResult var59 = var56.run();
    com.application.ciadobusao.test.EncontroTeste var61 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var62 = var61.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var61);
    java.lang.String var64 = var61.toString();
    java.lang.String var65 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var59, (java.lang.Object)var61);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var59, (java.lang.Object)100.0f);
    var42.run(var59);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var59);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var24.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var28.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var38.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var64.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test473() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test473");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    junit.framework.TestResult var2 = var0.run();
    junit.framework.TestResult var3 = var0.run();
    var0.test();
    var0.test();
    java.lang.String var6 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test474() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test474");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue("hi!(com.application.ciadobusao.test.EncontroTeste)", false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test475() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test475");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var2);
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var8 = var2.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var2);
    java.lang.String var10 = var2.getName();
    junit.framework.Assert.assertNotNull((java.lang.Object)var2);
    var2.setName("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>");
    java.lang.Object var15 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var15, (java.lang.Object)var16);
    java.lang.String var18 = var16.toString();
    var16.setName("hi!");
    junit.framework.TestResult var21 = var16.run();
    java.lang.Object var22 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var23 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var22, (java.lang.Object)var23);
    java.lang.String var25 = var23.toString();
    com.application.ciadobusao.test.EncontroTeste var26 = new com.application.ciadobusao.test.EncontroTeste();
    int var27 = var26.countTestCases();
    java.lang.String var28 = var26.getName();
    junit.framework.TestResult var29 = var26.run();
    var23.run(var29);
    var23.setName("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>");
    var23.test();
    java.lang.String var34 = junit.framework.Assert.format("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>>", (java.lang.Object)var16, (java.lang.Object)var23);
    java.lang.String var35 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var2, (java.lang.Object)var23);
    java.lang.Object var36 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var37 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var36, (java.lang.Object)var37);
    java.lang.String var39 = var37.toString();
    junit.framework.TestResult var40 = var37.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var25.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var34.equals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var35.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var39.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);

  }

  public void test476() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test476");


    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    int var4 = var3.countTestCases();
    java.lang.String var5 = var3.getName();
    junit.framework.TestResult var6 = var3.run();
    int var7 = var3.countTestCases();
    com.application.ciadobusao.test.EncontroTeste var8 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var9 = var8.toString();
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var11 = var10.run();
    var8.run(var11);
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var3, (java.lang.Object)var11);
    int var14 = var3.countTestCases();
    java.lang.Object var15 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var15, (java.lang.Object)var16);
    java.lang.String var18 = var16.toString();
    junit.framework.TestResult var19 = var16.run();
    junit.framework.Assert.assertNotSame((java.lang.Object)var3, (java.lang.Object)var19);
    var3.test();
    java.lang.String var23 = junit.framework.Assert.format("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var3, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)");
    var3.test();
    com.application.ciadobusao.test.EncontroTeste var25 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var26 = var25.run();
    junit.framework.TestResult var27 = var25.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var3, (java.lang.Object)var25);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var9.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var18.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var23.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);

  }

  public void test477() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test477");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    var1.setName(" expected:<10> but was:<10>");
    junit.framework.TestResult var5 = var1.run();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var8 = var1.toString();
    int var9 = var1.countTestCases();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<1> but was:<10>", (java.lang.Object)var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);

  }

  public void test478() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test478");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>>", false, false);

  }

  public void test479() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test479");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(1.0f, 100.0f, 1.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test480() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test480");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var2);
    junit.framework.TestResult var5 = var2.run();
    com.application.ciadobusao.test.EncontroTeste var7 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var8 = var7.run();
    var7.test();
    java.lang.String var10 = var7.getName();
    com.application.ciadobusao.test.EncontroTeste var11 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var12 = var11.run();
    var7.run(var12);
    java.lang.String var14 = var7.toString();
    var7.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >");
    java.lang.Object var19 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var19, (java.lang.Object)var20);
    java.lang.String var22 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var20);
    java.lang.String var23 = var20.toString();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var7, (java.lang.Object)var23);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>", (java.lang.Object)var2, (java.lang.Object)var23);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var14.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var22.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var23.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test481() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test481");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var2 = var1.toString();
    var1.setName(" expected:<10> but was:<10>");
    junit.framework.TestResult var5 = var1.run();
    var1.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    java.lang.String var8 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var9.test();
    java.lang.String var12 = var9.toString();
    com.application.ciadobusao.test.EncontroTeste var13 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var14 = var13.run();
    junit.framework.TestResult var15 = var13.run();
    junit.framework.TestResult var16 = var13.run();
    var9.run(var16);
    var1.run(var16);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var16);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var2.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var8.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test482() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test482");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    var1.test();
    java.lang.String var4 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var5 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var6 = var5.toString();
    var5.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var9 = var5.countTestCases();
    int var10 = var5.countTestCases();
    junit.framework.Assert.assertNotSame((java.lang.Object)var1, (java.lang.Object)var10);
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    junit.framework.TestResult var14 = var12.run();
    junit.framework.TestResult var15 = var12.run();
    var12.test();
    var12.test();
    junit.framework.Assert.assertNotSame((java.lang.Object)var1, (java.lang.Object)var12);
    java.lang.String var19 = var12.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>> but was:< >", (java.lang.Object)var12, (java.lang.Object)0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var4.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var6.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);

  }

  public void test483() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test483");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", "hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test484() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test484");


    java.lang.Object var3 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var4 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var3, (java.lang.Object)var4);
    java.lang.String var6 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var4);
    java.lang.String var7 = var4.toString();
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    var9.test();
    junit.framework.TestResult var12 = var9.run();
    int var13 = var9.countTestCases();
    java.lang.Object var16 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var17 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var16, (java.lang.Object)var17);
    java.lang.String var19 = junit.framework.Assert.format("hi!", (java.lang.Object)(-1), (java.lang.Object)var17);
    java.lang.String var20 = var17.toString();
    var17.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.Assert.assertNotSame("hi! expected:<100> but was:<10>", (java.lang.Object)var9, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var4, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var6.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var19.equals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var20.equals("null(com.application.ciadobusao.test.EncontroTeste)"));

  }

  public void test485() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test485");


    com.application.ciadobusao.test.EncontroTeste var0 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var1 = var0.run();
    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    var2.test();
    junit.framework.TestResult var5 = var2.run();
    var0.run(var5);
    junit.framework.TestResult var7 = var0.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var7, (java.lang.Object)100.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test486() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test486");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", 0.0d, 100.0d, 1.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test487() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test487");


    junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)", (short)10, (short)10);

  }

  public void test488() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test488");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((-1.0f), 100.0f, 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test489() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test489");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.TestResult var5 = var2.run();
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var2);
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var10 = var9.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var9);
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    var12.test();
    java.lang.String var15 = var12.getName();
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    var12.run(var17);
    var9.run(var17);
    com.application.ciadobusao.test.EncontroTeste var20 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var21 = var20.run();
    com.application.ciadobusao.test.EncontroTeste var22 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var23 = var22.run();
    var22.test();
    junit.framework.TestResult var25 = var22.run();
    var20.run(var25);
    var9.run(var25);
    junit.framework.Assert.assertNotNull("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var9);
    java.lang.String var29 = var9.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var9);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);

  }

  public void test490() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test490");


    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)(byte)(-1));

  }

  public void test491() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test491");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((-1L), 1L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test492() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test492");


    java.lang.Object var2 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var2, (java.lang.Object)var3);
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var7 = var6.toString();
    var6.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var10 = var6.countTestCases();
    java.lang.String var12 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var6, (java.lang.Object)true);
    java.lang.String var13 = var6.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var3, (java.lang.Object)var13);
    com.application.ciadobusao.test.EncontroTeste var15 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var16 = var15.toString();
    var15.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var19 = var15.countTestCases();
    int var20 = var15.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var13, (java.lang.Object)var15);
    junit.framework.TestResult var22 = var15.run();
    var15.setName("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var7.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var12.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var13.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test493() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test493");


    com.application.ciadobusao.test.EncontroTeste var1 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var2 = var1.run();
    com.application.ciadobusao.test.EncontroTeste var3 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var4 = var3.run();
    var3.test();
    junit.framework.TestResult var6 = var3.run();
    var1.run(var6);
    junit.framework.TestResult var8 = var1.run();
    java.lang.String var9 = var1.getName();
    var1.setName("hi!");
    java.lang.String var12 = var1.toString();
    com.application.ciadobusao.test.EncontroTeste var14 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var15 = var14.run();
    var14.test();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var14, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    java.lang.String var19 = var14.getName();
    var14.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    junit.framework.TestResult var22 = var14.run();
    junit.framework.TestResult var23 = var14.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame("hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var1, (java.lang.Object)var23);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!(com.application.ciadobusao.test.EncontroTeste)"+ "'", var12.equals("hi!(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);

  }

  public void test494() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test494");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<1> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<1.0> but was:<0>> but was:<100>", "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test495() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test495");


    java.lang.Object var5 = new java.lang.Object();
    com.application.ciadobusao.test.EncontroTeste var6 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.Assert.assertNotSame(var5, (java.lang.Object)var6);
    com.application.ciadobusao.test.EncontroTeste var9 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var10 = var9.toString();
    var9.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var13 = var9.countTestCases();
    java.lang.String var15 = junit.framework.Assert.format("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var9, (java.lang.Object)true);
    java.lang.String var16 = var9.toString();
    junit.framework.Assert.assertNotSame(" expected:<10> but was:<10>", (java.lang.Object)var6, (java.lang.Object)var16);
    com.application.ciadobusao.test.EncontroTeste var18 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var19 = var18.toString();
    var18.setName("null(com.application.ciadobusao.test.EncontroTeste)");
    int var22 = var18.countTestCases();
    int var23 = var18.countTestCases();
    junit.framework.Assert.assertNotSame("null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>", (java.lang.Object)var16, (java.lang.Object)var18);
    junit.framework.TestResult var25 = var18.run();
    java.lang.String var26 = var18.getName();
    java.lang.String var27 = junit.framework.Assert.format("hi!", (java.lang.Object)"hi!", (java.lang.Object)var18);
    var18.test();
    com.application.ciadobusao.test.EncontroTeste var29 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var30 = var29.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var30);
    var18.run(var30);
    com.application.ciadobusao.test.EncontroTeste var33 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var34 = var33.toString();
    var33.setName(" expected:<10> but was:<10>");
    junit.framework.TestResult var37 = var33.run();
    var33.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste)", (java.lang.Object)var18, (java.lang.Object)"null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var10.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"+ "'", var15.equals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"+ "'", var16.equals("null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var26.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"+ "'", var27.equals("hi! expected:<hi!> but was:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)>"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var34.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);

  }

  public void test496() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test496");


    junit.framework.Assert.assertEquals("hi! expected:<100> but was:<10> expected:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste)> but was:< expected:<10> but was:<10>> expected:<hi!(com.application.ciadobusao.test.EncontroTeste)> but was:<hi!(com.application.ciadobusao.test.EncontroTeste) expected:<1> but was:<hi!(com.application.ciadobusao.test.EncontroTeste)>(com.application.ciadobusao.test.EncontroTeste)>", 1.0d, 1.0d, (-1.0d));

  }

  public void test497() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test497");


    junit.framework.Assert.assertEquals("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", 10.0d, 1.0d, 10.0d);

  }

  public void test498() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test498");


    junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true> expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<1>", (-1), (-1));

  }

  public void test499() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test499");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<10> but was:< expected:<10> but was:<10>(com.application.ciadobusao.test.EncontroTeste)>", (byte)0, (byte)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test500() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test500");


    com.application.ciadobusao.test.EncontroTeste var2 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var3 = var2.run();
    junit.framework.TestResult var4 = var2.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)> expected:<null(com.application.ciadobusao.test.EncontroTeste)> but was:<null(com.application.ciadobusao.test.EncontroTeste) expected:<100> but was:<-1>>", (java.lang.Object)var2);
    var2.setName("null(com.application.ciadobusao.test.EncontroTeste) expected:<null(com.application.ciadobusao.test.EncontroTeste)(com.application.ciadobusao.test.EncontroTeste)> but was:<true>");
    var2.setName("hi! expected:<100> but was:<10>");
    com.application.ciadobusao.test.EncontroTeste var10 = new com.application.ciadobusao.test.EncontroTeste();
    java.lang.String var11 = var10.toString();
    com.application.ciadobusao.test.EncontroTeste var12 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var13 = var12.run();
    var10.run(var13);
    com.application.ciadobusao.test.EncontroTeste var16 = new com.application.ciadobusao.test.EncontroTeste();
    junit.framework.TestResult var17 = var16.run();
    junit.framework.Assert.assertNotNull("hi! expected:<-1> but was:<null(com.application.ciadobusao.test.EncontroTeste)>", (java.lang.Object)var16);
    java.lang.String var19 = var16.toString();
    int var20 = var16.countTestCases();
    int var21 = var16.countTestCases();
    java.lang.String var22 = var16.getName();
    junit.framework.Assert.assertNotSame((java.lang.Object)var13, (java.lang.Object)var16);
    var2.run(var13);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)100.0d, (java.lang.Object)var13);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var11.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null(com.application.ciadobusao.test.EncontroTeste)"+ "'", var19.equals("null(com.application.ciadobusao.test.EncontroTeste)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);

  }

}
